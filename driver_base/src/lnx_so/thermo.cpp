/*******************************************************************************
              Copyright (c) 1983-2009 Advantech Co., Ltd.
********************************************************************************
THIS IS AN UNPUBLISHED WORK CONTAINING CONFIDENTIAL AND PROPRIETARY INFORMATION
WHICH IS THE PROPERTY OF ADVANTECH CORP., ANY DISCLOSURE, USE, OR REPRODUCTION,
WITHOUT WRITTEN AUTHORIZATION FROM ADVANTECH CORP., IS STRICTLY PROHIBITED. 

================================================================================
REVISION HISTORY
--------------------------------------------------------------------------------
$Log: $
--------------------------------------------------------------------------------
$NoKeywords:  $
*/

// ----------------------------------------------------------------------------
// File:        Thermo.cpp
// Module:      UserLib.lib
// Environment: User Mode
// Reference:   Microsoft WDK
// Description: thermo functions
// ----------------------------------------------------------------------------
#include <float.h>
#include <math.h>
#include <biouserbase.h>


// helper macro to calculate a polynomial
#define PolyVal_Order_7( coef, x ) \
   ( coef[0] + x*( coef[1] + x*( coef[2] + x*( coef[3]+ x*( coef[4] + x*( coef[5] + x*( coef[6] + x*( coef[7] ) ) ) ) ) ) ) )

#define PolyVal_Order_8( coef, x ) \
   ( coef[0] + x*( coef[1] + x*( coef[2] + x*( coef[3] + x*( coef[4] + x*( coef[5] + x*( coef[6] + x*( coef[7] + x*coef[8] ) ) ) ) ) ) ) )

#define PolyVal_Order_9( coef, x ) \
   ( coef[0] + x*( coef[1] + x*( coef[2] + x*( coef[3] + x*( coef[4] + x*( coef[5] + x*( coef[6] + x*( coef[7] + x*( coef[8] + x*coef[9] ) ) ) ) ) ) ) ) )

#define PolyVal_Order_10( coef, x ) \
   ( coef[0] + x*( coef[1] + x*( coef[2] + x*( coef[3] + x*( coef[4] + x*( coef[5] + x*( coef[6] + x*( coef[7] + x*( coef[8] + x*( coef[9] + x*coef[10] ) ) ) ) ) ) ) ) ) )

#define PolyVal_Order_13( coef, x ) \
   ( coef[0] + x*( coef[1] + x*( coef[2] + x*( coef[3] + x*( coef[4] + x*( coef[5] + x*( coef[6] + x*( coef[7] + x*( coef[8] + x*( coef[9] + x*( coef[10] + x*( coef[11] + x*( coef[12] + x*coef[13] ) ) ) ) ) ) ) ) ) ) ) ) )

#define PolyVal_Order_14( coef, x ) \
   ( coef[0] + x*( coef[1] + x*( coef[2] + x*( coef[3] + x*( coef[4] + x*( coef[5] + x*( coef[6] + x*( coef[7] + x*( coef[8] + x*( coef[9] + x*( coef[10] + x*( coef[11] + x*( coef[12] + x*( coef[13] + x*coef[14] ) ) ) ) ) ) ) ) ) ) ) ) ) )

/****************************************************************************
* The following data are from NIST ITS-90 Thermocouple Database.
* NIST Standard Reference Database 60, Version 2.0 (Web Version)
* http://srdata.nist.gov/its90/main/
****************************************************************************/
//J, K, S, T, B, R, E, N

//******************************************
// Type J Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_J[3][9] =
{
   {  // -8.095 mV to 0 mV : -210 to 0 Deg.C 
       0.0000000E+00f,
       1.9528268E+01f,
      -1.2286185E+00f,
      -1.0752178E+00f,
      -5.9086933E-01f,
      -1.7256713E-01f,
      -2.8131513E-02f,
      -2.3963370E-03f,
      -8.3823321E-05f
   },

   {  // 0 mV to 42.919 mV : 0 to 760 Deg.C
       0.000000E+00f,
       1.978425E+01f,
      -2.001204E-01f,
       1.036969E-02f,
      -2.549687E-04f,
       3.585153E-06f,
      -5.344285E-08f,
       5.099890E-10f,
       0.000000E+00f
   },

   {  // 42.919 mV to 69.553 mV : 760 to 1200 Deg.C
      -3.11358187E+03f,
       3.00543684E+02f,
      -9.94773230E+00f,
       1.70276630E-01f,
      -1.43033468E-03f,
       4.73886084E-06f,
       0.00000000E+00f,
       0.00000000E+00f,
       0.00000000E+00f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
static double E_J[2][9] =
{
   {  // -210 to 760 Deg.C
       0.000000000000E+00f,
       0.503811878150E-01f,
       0.304758369300E-04f,
      -0.856810657200E-07f,
       0.132281952950E-09f,
      -0.170529583370E-12f,
       0.209480906970E-15f,
      -0.125383953360E-18f,
       0.156317256970E-22f
   },
       
   {  // 760 to 1200 Deg.C
       0.296456256810E+03f,
      -0.149761277860E+01f,
       0.317871039240E-02f,
      -0.318476867010E-05f,
       0.157208190040E-08f,
      -0.306913690560E-12f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
   }
};

//******************************************
// Type K Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_K[3][10] =
{
   {  // -5.891 mV to 0 mV : -200 to 0 Deg.C
       0.0000000E+00f,
       2.5173462E+01f,
      -1.1662878E+00f,
      -1.0833638E+00f,
      -8.9773540E-01f,
      -3.7342377E-01f,
      -8.6632643E-02f,
      -1.0450598E-02f,
      -5.1920577E-04f,
       0.0000000E+00f
   },

   {  // 0 mV to 20.644 mV : 0 to 500 Deg.C
       0.000000E+00f,
       2.508355E+01f,
       7.860106E-02f,
      -2.503131E-01f,
       8.315270E-02f,
      -1.228034E-02f,
       9.804036E-04f,
      -4.413030E-05f,
       1.057734E-06f,
      -1.052755E-08f
   },

   {  // 20.644 mV to 54.886 mV : 500 to 1372 Deg.C
      -1.318058E+02f,
       4.830222E+01f,
      -1.646031E+00f,
       5.464731E-02f,
      -9.650715E-04f,
       8.802193E-06f,
      -3.110810E-08f,
       0.000000E+00f,
       0.000000E+00f,
       0.000000E+00f
    }
};

// t90 < 0: E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// t90 > 0: E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n + a0*e^(a1*(t90-a2)^2)
// where e is the natural logarithm constant, E is in mV, and t90 is in Deg.C
static double E_K[2][11] =
{
   {  // -270 to 0 Deg.C
       0.000000000000E+00f,
       0.394501280250E-01f,
       0.236223735980E-04f,
      -0.328589067840E-06f,
      -0.499048287770E-08f,
      -0.675090591730E-10f,
      -0.574103274280E-12f,
      -0.310888728940E-14f,
      -0.104516093650E-16f,
      -0.198892668780E-19f,
      -0.163226974860E-22f
   },

   {  // 0 to 1372 Deg.C
      -0.176004136860E-01f,
       0.389212049750E-01f,
       0.185587700320E-04f,
      -0.994575928740E-07f,
       0.318409457190E-09f,
      -0.560728448890E-12f,
       0.560750590590E-15f,
      -0.320207200030E-18f,
       0.971511471520E-22f,
      -0.121047212750E-25f,
       0.000000000000E+00f
   }
};

static double E_K1[3] =
{
    0.118597600000E+00f,
   -0.118343200000E-03f,
    0.126968600000E+03f
};

//******************************************
// Type S Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_S[4][10] =
{
   {  // -0.235 to 1.874 mV : -50 to 250 Deg.C
       0.00000000E+00f,
       1.84949460E+02f,
      -8.00504062E+01f,
       1.02237430E+02f,
      -1.52248592E+02f,
       1.88821343E+02f,
      -1.59085941E+02f,
       8.23027880E+01f,
      -2.34181944E+01f,
       2.79786260E+00f
   },

   {  // 1.874 to 11.950 mV : 250 : 1200 Deg.C
       1.291507177E+01f,
       1.466298863E+02f,
      -1.534713402E+01f,
       3.145945973E+00f,
      -4.163257839E-01f,
       3.187963771E-02f,
      -1.291637500E-03f,
       2.183475087E-05f,
      -1.447379511E-07f,
       8.211272125E-09f
   },

   {	// 10.332 to 17.536 mV : 1064 to 1664.5 Deg.C
      -8.087801117E+01f,
       1.621573104E+02f,
      -8.536869453E+00f,
       4.719686976E-01f,
      -1.441693666E-02f,
       2.081618890E-04f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f
   },

   {  // 17.536 to 18.693 mV : 1664.5 to 1768.1 Deg.C
       5.333875126E+04f,
      -1.235892298E+04f,
       1.092657613E+03f,
      -4.265693686E+01f,
       6.247205420E-01f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
static double E_S[3][9] =
{
   {  // -50 to 1064.18 Deg.C
       0.000000000000E+00f,
       0.540313308631E-02f,
       0.125934289740E-04f,
      -0.232477968689E-07f,
       0.322028823036E-10f,
      -0.331465196389E-13f,
       0.255744251786E-16f,
      -0.125068871393E-19f,
       0.271443176145E-23f
   },

   {  // 1064.18 to 1664.5 Deg.C
       0.132900444085E+01f,
       0.334509311344E-02f,
       0.654805192818E-05f,
      -0.164856259209E-08f,
       0.129989605174E-13f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
   },

   {  // 1664.5 to 1768.1 Deg.C
       0.146628232636E+03f,
      -0.258430516752E+00f,
       0.163693574641E-03f,
      -0.330439046987E-07f,
      -0.943223690612E-14f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
   }
};

//******************************************
// Type T Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_T[2][8] =
{
   {  // -5.603 mV to 0 mV : -200 to 0 Deg.C
       0.0000000E+00f,
       2.5949192E+01f,
      -2.1316967E-01f,
       7.9018692E-01f,
       4.2527777E-01f,
       1.3304473E-01f,
       2.0241446E-02f,
       1.2668171E-03f
   },

   {  // 0 mV to 20.872 mV : 0 to 400 Deg.C
       0.000000E+00f,
       2.592800E+01f,
      -7.602961E-01f,
       4.637791E-02f,
      -2.165394E-03f,
       6.048144E-05f,
      -7.293422E-07f,
       0.000000E+00f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
static double E_T[2][15] =
{
   {  // -270 to 0 Deg.C
       0.000000000000E+00f,
       0.387481063640E-01f,
       0.441944343470E-04f,
       0.118443231050E-06f,
       0.200329735540E-07f,
       0.901380195590E-09f,
       0.226511565930E-10f,
       0.360711542050E-12f,
       0.384939398830E-14f,
       0.282135219250E-16f,
       0.142515947790E-18f,
       0.487686622860E-21f,
       0.107955392700E-23f,
       0.139450270620E-26f,
       0.797951539270E-30f
   },

   {  // 0 to 400 Deg.C
       0.000000000000E+00f,
       0.387481063640E-01f,
       0.332922278800E-04f,
       0.206182434040E-06f,
      -0.218822568460E-08f,
       0.109968809280E-10f,
      -0.308157587720E-13f,
       0.454791352900E-16f,
      -0.275129016730E-19f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
   }
};

//******************************************
// Type B Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_B[2][9] =
{
   {  // 0.291 mV to 2.431mV : 250 to 700 Deg.C
       9.8423321E+01f,
       6.9971500E+02f,
      -8.4765304E+02f,
       1.0052644E+03f,
      -8.3345952E+02f,
       4.5508542E+02f,
      -1.5523037E+02f,
       2.9886750E+01f,
      -2.4742860E+00f
   },

   {  // 2.431 mV to 13.820 mV : 700 to 1820 Deg.C
       2.1315071E+02f,
       2.8510504E+02f,
      -5.2742887E+01f,
       9.9160804E+00f,
      -1.2965303E+00f,
       1.1195870E-01f,
      -6.0625199E-03f,
       1.8661696E-04f,
      -2.4878585E-06f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
static double E_B[2][9] =
{
   {  // 0 to 630.615 Deg.C
       0.000000000000E+00f,
      -0.246508183460E-03f,
       0.590404211710E-05f,
      -0.132579316360E-08f,
       0.156682919010E-11f,
      -0.169445292400E-14f,
       0.629903470940E-18f,
       0.000000000000E+00f,
       0.000000000000E+00f
   },

   {  // 630.615 to 1820 Deg.C
      -0.389381686210E+01f,
       0.285717474700E-01f,
      -0.848851047850E-04f,
       0.157852801640E-06f,
      -0.168353448640E-09f,
       0.111097940130E-12f,
      -0.445154310330E-16f,
       0.989756408210E-20f,
      -0.937913302890E-24f
   }
};

//******************************************
// Type R Thermocouples Coefficients in mV
//******************************************

// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_R[4][11] =
{
   {  // -0.226 to 1.923 mV : -50 to 250 Deg.C
       0.0000000E+00f,
       1.8891380E+02f,
      -9.3835290E+01f,
       1.3068619E+02f,
      -2.2703580E+02f,
       3.5145659E+02f,
      -3.8953900E+02f,
       2.8239471E+02f,
      -1.2607281E+02f,
       3.1353611E+01f,
      -3.3187769E+00f
   },

   {  // 1.923 to 13.228 mV : 250 to 1200 Deg.C
       1.334584505E+01f,
       1.472644573E+02f,
      -1.844024844E+01f,
       4.031129726E+00f,
      -6.249428360E-01f,
       6.468412046E-02f,
      -4.458750426E-03f,
       1.994710149E-04f,
      -5.313401790E-06f,
       6.481976217E-08f,
       0.000000000E+00f
    },

   {  // 11.361 to 19.739 mV : 1064 to 1664.5 Deg.C
      -8.199599416E+01f,
       1.553962042E+02f,
      -8.342197663E+00f,
       4.279433549E-01f,
      -1.191577910E-02f,
       1.492290091E-04f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f
   },

   {  // 19.739 to 21.103 mV : 1664.5 to 1768.1 Deg.C
       3.406177836E+04f,
      -7.023729171E+03f,
       5.582903813E+02f,
      -1.952394635E+01f,
       2.560740231E-01f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f,
       0.000000000E+00f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
static double E_R[3][10] =
{
   {  // -50 to 1064.18 Deg.C
       0.000000000000E+00f,
       0.528961729765E-02f,
       0.139166589782E-04f,
      -0.238855693017E-07f,
       0.356916001063E-10f,
      -0.462347666298E-13f,
       0.500777441034E-16f,
      -0.373105886191E-19f,
       0.157716482367E-22f,
      -0.281038625251E-26f
   },

   {  // 1064.18 to 1664.5 Deg.C
       0.295157925316E+01f,
      -0.252061251332E-02f,
       0.159564501865E-04f,
      -0.764085947576E-08f,
       0.205305291024E-11f,
      -0.293359668173E-15f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
   },

   {  // 1664.5 to 1768.1 Deg.C
       0.152232118209E+03f,
      -0.268819888545E+00f,
       0.171280280471E-03f,
      -0.345895706453E-07f,
      -0.934633971046E-14f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
   }
};

//******************************************
// Type E Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_E[2][10] =
{
   {  // -8.825 mV to 0 mV : -200 to 0
       0.0000000E+00f,
       1.6977288E+01f,
      -4.3514970E-01f,
      -1.5859697E-01f,
      -9.2502871E-02f,
      -2.6084314E-02f,
      -4.1360199E-03f,
      -3.4034030E-04f,
      -1.1564890E-05f,
       0.0000000E+00f
   },

   {  // 0 mV to 76.373 mV : 0 to 1000 Deg.C
       0.0000000E+00f,
       1.7057035E+01f,
      -2.3301759E-01f,
       6.5435585E-03f,
      -7.3562749E-05f,
      -1.7896001E-06f,
       8.4036165E-08f,
      -1.3735879E-09f,
       1.0629823E-11f,
      -3.2447087E-14f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
static double E_E[2][14] =
{
   {  // -270 to 0 Deg.C
       0.000000000000E+00f,
       0.586655087080E-01f,
       0.454109771240E-04f,
      -0.779980486860E-06f,
      -0.258001608430E-07f,
      -0.594525830570E-09f,
      -0.932140586670E-11f,
      -0.102876055340E-12f,
      -0.803701236210E-15f,
      -0.439794973910E-17f,
      -0.164147763550E-19f,
      -0.396736195160E-22f,
      -0.558273287210E-25f,
      -0.346578420130E-28f
   },

   {  // 0 to 1000 Deg.C
       0.000000000000E+00f,
       0.586655087100E-01f,
       0.450322755820E-04f,
       0.289084072120E-07f,
      -0.330568966520E-09f,
       0.650244032700E-12f,
      -0.191974955040E-15f,
      -0.125366004970E-17f,
       0.214892175690E-20f,
      -0.143880417820E-23f,
       0.359608994810E-27f,
       0.000000000000E+00f,
       0.000000000000E+00f,
       0.000000000000E+00f
    }
}; 

//******************************************
// Type N Thermocouples Coefficients in mV
//******************************************
// t90 = d0 + d1*E + d2*E^2 + ... dn*E^n
// where E is in mV and t90 is in Deg.C
static double T_N[3][10] =
{
   {  // -3.990 to 0 mV : -200 to 0 Deg.C
       0.0000000E+00f,
       3.8436847E+01f,
       1.1010485E+00f,
       5.2229312E+00f,
       7.2060525E+00f,
       5.8488586E+00f,
       2.7754916E+00f,
       7.7075166E-01f,
       1.1582665E-01f,
       7.3138868E-03f
   },

   {  // 0 to 20.613 mV : 0 to 600 Deg.C
       0.00000E+00f,
       3.86896E+01f,
      -1.08267E+00f,
       4.70205E-02f,
      -2.12169E-06f,
      -1.17272E-04f,
       5.39280E-06f,
      -7.98156E-08f,
       0.00000E+00f,
       0.00000E+00f
   },

   {  // 20.613 to 47.513 mV : 600 to 1300 Deg.C
       1.972485E+01f,
       3.300943E+01f,
      -3.915159E-01f,
       9.855391E-03f,
      -1.274371E-04f,
       7.767022E-07f,
       0.000000E+00f,
       0.000000E+00f,
       0.000000E+00f,
       0.000000E+00f
   }
};

// E = c0 + c1*t90 + c2*t90^2 + ... cn*t90^n
// where E is in mV and t90 is in Deg.C
 static double E_N[2][11] =
{
   {  // -270 to 0 Deg.C
       0.000000000000E+00f,
       0.261591059620E-01f,
       0.109574842280E-04f,
      -0.938411115540E-07f,
      -0.464120397590E-10f,
      -0.263033577160E-11f,
      -0.226534380030E-13f,
      -0.760893007910E-16f,
      -0.934196678350E-19f,
       0.000000000000E+00f,
       0.000000000000E+00f
   },

   {  // 0 to 1300 Deg.C
       0.000000000000E+00f,
       0.259293946010E-01f,
       0.157101418800E-04f,
       0.438256272370E-07f,
      -0.252611697940E-09f,
       0.643118193390E-12f,
      -0.100634715190E-14f,
       0.997453389920E-18f,
      -0.608632456070E-21f,
       0.208492293390E-24f,
      -0.306821961510E-28f
   }
}; 

 //------------------------------------------------------------------
 // Function    : ThermoTemperature
 // PURPOSE     : The procedure handle the translation from corrected
 //				 voltage to Celsius temperature.
 // Parameters  : fV1(IN)
 //               type(IN)
 // Return      : Celsius temperature
 //
 // Call/Called procedure cross reference :
 // Call        Called		     Explanation
 //			   TCExp8115Read
 //			   TCExp788Read
 //---------------------------------------------------------------------------
 double ThermoTemperature(double fV1, uint32 type)
 {
    double fT1;
    double * coef;
    switch ( type )
    {
    case TCType_J: //Type J
       {
          if (fV1 < 0) {
             coef = T_J[0];
          } else if (fV1 < 42.919) {
             coef = T_J[1];
          } else {
             coef = T_J[2];
          }
          fT1 = PolyVal_Order_8( coef, fV1 );
       }
       break;

    case TCType_K://type k
       {
          if (fV1 < 0) {
             coef = T_K[0];
          } else if (fV1 < 20.644f) {
             coef = T_K[1];
          } else {
             coef = T_K[2];
          }
          fT1 = PolyVal_Order_9( coef, fV1 );
       }
       break;

    case TCType_S://type S
       {
          if (fV1 < 1.874f) {
             coef = T_S[0];
          } else if (fV1 < 10.332f) {
             coef = T_S[1];
          } else if (fV1 < 17.536f) {
             coef = T_S[2];
          } else {
             coef = T_S[3];
          }             
          fT1 = PolyVal_Order_9( coef, fV1 );
       }
       break;

    case TCType_T://type T
       {
          if (fV1 < 0) {
             coef = T_T[0];
          } else {
             coef = T_T[1];
          }
          fT1 = PolyVal_Order_7( coef, fV1 );
       }
       break;

    case TCType_B://type B
       {
          if (fV1 < 2.431f) {
             coef = T_B[0]; 
          } else {
             coef = T_B[1]; 
          }
          fT1 = PolyVal_Order_8( coef, fV1 );
       }
       break;

    case TCType_R://type R
       {
          if (fV1 < 1.923f) {
             coef = T_R[0]; 
          } else if (fV1 < 11.361f) {
             coef = T_R[1];
          } else if (fV1 < 19.739f) {
             coef = T_R[2];
          } else {
             coef = T_R[3];
          }
          fT1 = PolyVal_Order_10( coef, fV1 );
       }
       break;

    case TCType_E://type E
       {
          if (fV1 < 0) {
              coef = T_E[0];
          } else {
              coef = T_E[1];
          }
          fT1 = PolyVal_Order_9( coef, fV1 );
       }
       break;

    case TCType_N: //type N
       {
          if (fV1 < 0) {
             coef = T_N[0];
          } else if (fV1 < 20.613) {
             coef = T_N[1];
          } else {
             coef = T_N[2];
          }
          fT1 = PolyVal_Order_10( coef, fV1 );
       }
       break;

    default:
    	 fT1 = 25; // BUG!!! It must not reach here!!!
       break;
    }

    return(fT1);
 }

 //------------------------------------------------------------------
 // Function    : TemperatureScales()
 // PURPOSE     : The procedure handle the translation from Celsius
 //				 temperature to other temperature scale.
 // Parameters  : tmp(IN)
 //               units(IN)
 // Return      : converted temperature
 //
 // Call/Called procedure cross reference :
 // Call        Called		     Explanation
 //			   TCExp8115Read
 //			   TCExp788Read
 //---------------------------------------------------------------------------
 double TemperatureScales( double tmp, uint32 unit )
 {
    switch(unit)
    {
    case Fahrenheit: return tmp * (double)9.0/(double)5.0 + (double)32.0;
    case Kelvin:	   return tmp + (double)273.15;
    case Rankine:    return (tmp * (double)9.0/(double)5.0 + (double)32.0)+(double)459.67;
    case Celsius:		
    default:
       return(tmp);
    }
 }
 
 //------------------------------------------------------------------
 // Function    : GetCjcErrorVoltage
 // PURPOSE     : calculate the CJC error voltage.
 // Parameters  : cjc(IN) -- CJC temperature
 //               type(IN) -- thermocouple type
 // Return      : CJC error voltage
 //
 //---------------------------------------------------------------------------
 double GetCjcErrorVoltage( double cjc, uint32 type )
 {
    double * coef;
    switch (type)
    {
    case TCType_J:  // Type J
       if (cjc < 760)
       {
          coef = E_J[0];
       } else {
          coef = E_J[1];
       }
       return PolyVal_Order_8( coef, cjc );

    case TCType_K:  // Type K
       if ( cjc < 0 )
       {
          coef = E_K[0];
          return PolyVal_Order_10( coef, cjc );
       }  else {
          coef = E_K[1];
          return PolyVal_Order_10( coef, cjc ) + ( E_K1[0] * exp( E_K1[1] * pow(cjc - E_K1[2], 2)));
       }
      
    case TCType_S:  // Type S
       if (cjc < 1064.18)
       {
          coef = E_S[0];          
       } else if (cjc < 1664.5){
          coef = E_S[1];
       } else {
          coef = E_S[2];
       }
       return PolyVal_Order_8( coef, cjc );
       
    case TCType_T:  // Type T
       if (cjc < 0)
       {
          coef = E_T[0];
       } else {
          coef = E_T[1];
       }
       return PolyVal_Order_14( coef, cjc );

    case TCType_B:  // Type B
       if (cjc < 630.615)
       {   
          coef = E_B[0];
       } else {
          coef = E_B[1];
       }
       return PolyVal_Order_8( coef, cjc );

    case TCType_R:  // Type R
       if (cjc < 1064.18)
       {
          coef = E_R[0];
       } else if (cjc < 1664.5) {
          coef = E_R[1];
       } else {
          coef = E_R[2];
       }
       return PolyVal_Order_9( coef, cjc );

    case TCType_E:  // Type E
       if (cjc < 0)
       {   
          coef = E_E[0];
       } else {
          coef = E_E[1];
       }
       return PolyVal_Order_13( coef, cjc );

    case TCType_N:  // Type N
       if (cjc < 0)
       {   
          coef = E_N[0];
       } else { 
          coef = E_N[1];
       }
       return PolyVal_Order_10( coef, cjc );

    default:
       return 0;
    }
 }

 MathInterval const s_thermoVoltRange[] ={
    { Jtype_0To760C,       0,        0.042919 },
    { Ktype_0To1370C,      0,        0.054819 },
    { Ttype_Neg100To400C, -0.003379, 0.020872 }, 
    { Etype_0To1000C,      0,        0.076373 },
    { Rtype_500To1750C,    0.004471, 0.020877 },
    { Stype_500To1750C,    0.004233, 0.018503 },
    { Btype_500To1800C,    0.001242, 0.013591 },
    
    { Jtype_Neg210To1200C,-0.008095, 0.069553 },
    { Ktype_Neg270To1372C,-0.006458, 0.054886 },
    { Ttype_Neg270To400C, -0.006258, 0.020872 }, 
    { Etype_Neg270To1000C,-0.009835, 0.076373 },
    { Rtype_Neg50To1768C, -0.000226, 0.021103 },
    { Stype_Neg50To1768C, -0.000235, 0.018693 },
    { Btype_40To1820C,            0, 0.013820 },

    { Jtype_Neg210To870C, -0.008095, 0.05     },
    { Rtype_0To1768C,      0,        0.021103 },
    { Stype_0To1768C,      0,        0.018693 }
 };

 // The voltage read from Ai channel may be in the valid range, but not in the software designed range
 // For example, for R type thermo couple, the hardware range set to 0~50mV, 
 // while actual value for Rtype_500To1750C is (0.004471, 0.020877)
 // use this function to calculate the actual thermo voltage for the correspond thermo type
 double GetActualThermoVolt( double thermoVolt, uint32 vrgType )
 {
    double actualVal = thermoVolt;
    for ( uint32 i = 0; i < ARRAY_SIZE(s_thermoVoltRange); ++i )
    {
       if ( vrgType == (uint32)s_thermoVoltRange[i].Type )
       {
          if ( thermoVolt  < s_thermoVoltRange[i].Min )
          {
             actualVal = s_thermoVoltRange[i].Min;
          }
          if ( thermoVolt > s_thermoVoltRange[i].Max )
          {
             actualVal = s_thermoVoltRange[i].Max;
          }
          break;
       }
    }
    return actualVal;
 }

 MathInterval const s_thermoValueRange[] ={
    { Jtype_0To760C,         0, 760  },
    { Ktype_0To1370C,        0, 1370 },
    { Ttype_Neg100To400C, -100, 400  }, 
    { Etype_0To1000C,        0, 1000 },
    { Rtype_500To1750C,    500, 1750 },
    { Stype_500To1750C,    500, 1750 },
    { Btype_500To1800C,    500, 1800 },

    { Jtype_Neg210To1200C,-210, 1200 },
    { Ktype_Neg270To1372C,-270, 1372 },
    { Ttype_Neg270To400C, -270, 400  }, 
    { Etype_Neg270To1000C,-270, 1000 },
    { Rtype_Neg50To1768C,  -50, 1768 },
    { Stype_Neg50To1768C,  -50, 1768 },
    { Btype_40To1820C,      40, 1820 },

    { Jtype_Neg210To870C, -210, 870  },
    { Rtype_0To1768C,        0, 1768 },
    { Stype_0To1768C,        0, 1768 }
 };

 //Note: the second param is vrgType
 //because: TCType_J now have several range: Jtype_0To760C, Jtype_Neg210To1200C, Jtype_Neg210To870C
 double GetActualThermoValue( double thermoValue, uint32 vrgType )
 {
    double actualVal = thermoValue;
    for ( uint32 i = 0; i < ARRAY_SIZE(s_thermoValueRange); ++i )
    {
       if ( vrgType == (uint32)s_thermoValueRange[i].Type )
       {
          if ( thermoValue  < s_thermoValueRange[i].Min )
          {
             actualVal = s_thermoValueRange[i].Min;
          }
          if ( thermoValue > s_thermoValueRange[i].Max )
          {
             actualVal = s_thermoValueRange[i].Max;
          }
          break;
       }
    }
    return actualVal;
 }

 //////////////////////////////////////////////////////////////////////////
 // Use new method to calculate the thermo
 typedef struct _BioThermoMap{
   double mapHi;    //High range of mapped value
   double mapLo;    //High range of mapped value
   double thermoHi; //High range of thermocouple temperature
   double thermoLo; //Low range of thermocouple temperature
 }BioThermoMap;
 // Thermocouple voltage to temperature map
 // This map is the same for CJCVoltage and thermocouple voltage
 // The step is 10 Deg.C, the precision is acceptable if using liner intergation
 // Please rebuild the map if need higher precision
 BioThermoMap V2T_B[] = { //40 ~ 1820 Deg.C
    {	0.000002	,	     0	,	50 	,	40 	}	,
    {	0.000006	,	0.000002	,	60 	,	50 	}	,
    {	0.000011	,	0.000006	,	70 	,	60 	}	,
    {	0.000017	,	0.000011	,	80 	,	70 	}	,
    {	0.000025	,	0.000017	,	90 	,	80 	}	,
    {	0.000033	,	0.000025	,	100	,	90 	}	,
    {	0.000043	,	0.000033	,	110	,	100	}	,
    {	0.000053	,	0.000043	,	120	,	110	}	,
    {	0.000065	,	0.000053	,	130	,	120	}	,
    {	0.000078	,	0.000065	,	140	,	130	}	,
    {	0.000092	,	0.000078	,	150	,	140	}	,
    {	0.000107	,	0.000092	,	160	,	150	}	,
    {	0.000123	,	0.000107	,	170	,	160	}	,
    {	0.000141	,	0.000123	,	180	,	170	}	,
    {	0.000159	,	0.000141	,	190	,	180	}	,
    {	0.000178	,	0.000159	,	200	,	190	}	,
    {	0.000199	,	0.000178	,	210	,	200	}	,
    {	0.00022	,	0.000199	,	220	,	210	}	,
    {	0.000243	,	0.00022	,	230	,	220	}	,
    {	0.000267	,	0.000243	,	240	,	230	}	,
    {	0.000291	,	0.000267	,	250	,	240	}	,
    {	0.000317	,	0.000291	,	260	,	250	}	,
    {	0.000344	,	0.000317	,	270	,	260	}	,
    {	0.000372	,	0.000344	,	280	,	270	}	,
    {	0.000401	,	0.000372	,	290	,	280	}	,
    {	0.000431	,	0.000401	,	300	,	290	}	,
    {	0.000462	,	0.000431	,	310	,	300	}	,
    {	0.000494	,	0.000462	,	320	,	310	}	,
    {	0.000527	,	0.000494	,	330	,	320	}	,
    {	0.000561	,	0.000527	,	340	,	330	}	,
    {	0.000596	,	0.000561	,	350	,	340	}	,
    {	0.000632	,	0.000596	,	360	,	350	}	,
    {	0.000669	,	0.000632	,	370	,	360	}	,
    {	0.000707	,	0.000669	,	380	,	370	}	,
    {	0.000746	,	0.000707	,	390	,	380	}	,
    {	0.000787	,	0.000746	,	400	,	390	}	,
    {	0.000828	,	0.000787	,	410	,	400	}	,
    {	0.00087	,	0.000828	,	420	,	410	}	,
    {	0.000913	,	0.00087	,	430	,	420	}	,
    {	0.000957	,	0.000913	,	440	,	430	}	,
    {	0.001002	,	0.000957	,	450	,	440	}	,
    {	0.001048	,	0.001002	,	460	,	450	}	,
    {	0.001095	,	0.001048	,	470	,	460	}	,
    {	0.001143	,	0.001095	,	480	,	470	}	,
    {	0.001192	,	0.001143	,	490	,	480	}	,
    {	0.001242	,	0.001192	,	500	,	490	}	,
    {	0.001293	,	0.001242	,	510	,	500	}	,
    {	0.001344	,	0.001293	,	520	,	510	}	,
    {	0.001397	,	0.001344	,	530	,	520	}	,
    {	0.001451	,	0.001397	,	540	,	530	}	,
    {	0.001505	,	0.001451	,	550	,	540	}	,
    {	0.001561	,	0.001505	,	560	,	550	}	,
    {	0.001617	,	0.001561	,	570	,	560	}	,
    {	0.001675	,	0.001617	,	580	,	570	}	,
    {	0.001733	,	0.001675	,	590	,	580	}	,
    {	0.001792	,	0.001733	,	600	,	590	}	,
    {	0.001852	,	0.001792	,	610	,	600	}	,
    {	0.001913	,	0.001852	,	620	,	610	}	,
    {	0.001975	,	0.001913	,	630	,	620	}	,
    {	0.002037	,	0.001975	,	640	,	630	}	,
    {	0.002101	,	0.002037	,	650	,	640	}	,
    {	0.002165	,	0.002101	,	660	,	650	}	,
    {	0.00223	,	0.002165	,	670	,	660	}	,
    {	0.002296	,	0.00223	,	680	,	670	}	,
    {	0.002363	,	0.002296	,	690	,	680	}	,
    {	0.002431	,	0.002363	,	700	,	690	}	,
    {	0.002499	,	0.002431	,	710	,	700	}	,
    {	0.002569	,	0.002499	,	720	,	710	}	,
    {	0.002639	,	0.002569	,	730	,	720	}	,
    {	0.00271	,	0.002639	,	740	,	730	}	,
    {	0.002782	,	0.00271	,	750	,	740	}	,
    {	0.002854	,	0.002782	,	760	,	750	}	,
    {	0.002928	,	0.002854	,	770	,	760	}	,
    {	0.003002	,	0.002928	,	780	,	770	}	,
    {	0.003078	,	0.003002	,	790	,	780	}	,
    {	0.003154	,	0.003078	,	800	,	790	}	,
    {	0.00323	,	0.003154	,	810	,	800	}	,
    {	0.003308	,	0.00323	,	820	,	810	}	,
    {	0.003386	,	0.003308	,	830	,	820	}	,
    {	0.003466	,	0.003386	,	840	,	830	}	,
    {	0.003546	,	0.003466	,	850	,	840	}	,
    {	0.003626	,	0.003546	,	860	,	850	}	,
    {	0.003708	,	0.003626	,	870	,	860	}	,
    {	0.00379	,	0.003708	,	880	,	870	}	,
    {	0.003873	,	0.00379	,	890	,	880	}	,
    {	0.003957	,	0.003873	,	900	,	890	}	,
    {	0.004041	,	0.003957	,	910	,	900	}	,
    {	0.004127	,	0.004041	,	920	,	910	}	,
    {	0.004213	,	0.004127	,	930	,	920	}	,
    {	0.004299	,	0.004213	,	940	,	930	}	,
    {	0.004387	,	0.004299	,	950	,	940	}	,
    {	0.004475	,	0.004387	,	960	,	950	}	,
    {	0.004564	,	0.004475	,	970	,	960	}	,
    {	0.004653	,	0.004564	,	980	,	970	}	,
    {	0.004743	,	0.004653	,	990	,	980	}	,
    {	0.004834	,	0.004743	,	1000	,	990	}	,
    {	0.004926	,	0.004834	,	1010	,	1000	}	,
    {	0.005018	,	0.004926	,	1020	,	1010	}	,
    {	0.005111	,	0.005018	,	1030	,	1020	}	,
    {	0.005205	,	0.005111	,	1040	,	1030	}	,
    {	0.005299	,	0.005205	,	1050	,	1040	}	,
    {	0.005394	,	0.005299	,	1060	,	1050	}	,
    {	0.005489	,	0.005394	,	1070	,	1060	}	,
    {	0.005585	,	0.005489	,	1080	,	1070	}	,
    {	0.005682	,	0.005585	,	1090	,	1080	}	,
    {	0.00578	,	0.005682	,	1100	,	1090	}	,
    {	0.005878	,	0.00578	,	1110	,	1100	}	,
    {	0.005976	,	0.005878	,	1120	,	1110	}	,
    {	0.006075	,	0.005976	,	1130	,	1120	}	,
    {	0.006175	,	0.006075	,	1140	,	1130	}	,
    {	0.006276	,	0.006175	,	1150	,	1140	}	,
    {	0.006377	,	0.006276	,	1160	,	1150	}	,
    {	0.006478	,	0.006377	,	1170	,	1160	}	,
    {	0.00658	,	0.006478	,	1180	,	1170	}	,
    {	0.006683	,	0.00658	,	1190	,	1180	}	,
    {	0.006786	,	0.006683	,	1200	,	1190	}	,
    {	0.00689	,	0.006786	,	1210	,	1200	}	,
    {	0.006995	,	0.00689	,	1220	,	1210	}	,
    {	0.0071	,	0.006995	,	1230	,	1220	}	,
    {	0.007205	,	0.0071	,	1240	,	1230	}	,
    {	0.007311	,	0.007205	,	1250	,	1240	}	,
    {	0.007417	,	0.007311	,	1260	,	1250	}	,
    {	0.007524	,	0.007417	,	1270	,	1260	}	,
    {	0.007632	,	0.007524	,	1280	,	1270	}	,
    {	0.00774	,	0.007632	,	1290	,	1280	}	,
    {	0.007848	,	0.00774	,	1300	,	1290	}	,
    {	0.007957	,	0.007848	,	1310	,	1300	}	,
    {	0.008066	,	0.007957	,	1320	,	1310	}	,
    {	0.008176	,	0.008066	,	1330	,	1320	}	,
    {	0.008286	,	0.008176	,	1340	,	1330	}	,
    {	0.008397	,	0.008286	,	1350	,	1340	}	,
    {	0.008508	,	0.008397	,	1360	,	1350	}	,
    {	0.00862	,	0.008508	,	1370	,	1360	}	,
    {	0.008731	,	0.00862	,	1380	,	1370	}	,
    {	0.008844	,	0.008731	,	1390	,	1380	}	,
    {	0.008956	,	0.008844	,	1400	,	1390	}	,
    {	0.009069	,	0.008956	,	1410	,	1400	}	,
    {	0.009182	,	0.009069	,	1420	,	1410	}	,
    {	0.009296	,	0.009182	,	1430	,	1420	}	,
    {	0.00941	,	0.009296	,	1440	,	1430	}	,
    {	0.009524	,	0.00941	,	1450	,	1440	}	,
    {	0.009639	,	0.009524	,	1460	,	1450	}	,
    {	0.009753	,	0.009639	,	1470	,	1460	}	,
    {	0.009868	,	0.009753	,	1480	,	1470	}	,
    {	0.009984	,	0.009868	,	1490	,	1480	}	,
    {	0.010099	,	0.009984	,	1500	,	1490	}	,
    {	0.010215	,	0.010099	,	1510	,	1500	}	,
    {	0.010331	,	0.010215	,	1520	,	1510	}	,
    {	0.010447	,	0.010331	,	1530	,	1520	}	,
    {	0.010563	,	0.010447	,	1540	,	1530	}	,
    {	0.010679	,	0.010563	,	1550	,	1540	}	,
    {	0.010796	,	0.010679	,	1560	,	1550	}	,
    {	0.010913	,	0.010796	,	1570	,	1560	}	,
    {	0.011029	,	0.010913	,	1580	,	1570	}	,
    {	0.011146	,	0.011029	,	1590	,	1580	}	,
    {	0.011263	,	0.011146	,	1600	,	1590	}	,
    {	0.01138	,	0.011263	,	1610	,	1600	}	,
    {	0.011497	,	0.01138	,	1620	,	1610	}	,
    {	0.011614	,	0.011497	,	1630	,	1620	}	,
    {	0.011731	,	0.011614	,	1640	,	1630	}	,
    {	0.011848	,	0.011731	,	1650	,	1640	}	,
    {	0.011965	,	0.011848	,	1660	,	1650	}	,
    {	0.012082	,	0.011965	,	1670	,	1660	}	,
    {	0.012199	,	0.012082	,	1680	,	1670	}	,
    {	0.012316	,	0.012199	,	1690	,	1680	}	,
    {	0.012433	,	0.012316	,	1700	,	1690	}	,
    {	0.012549	,	0.012433	,	1710	,	1700	}	,
    {	0.012666	,	0.012549	,	1720	,	1710	}	,
    {	0.012782	,	0.012666	,	1730	,	1720	}	,
    {	0.012898	,	0.012782	,	1740	,	1730	}	,
    {	0.013014	,	0.012898	,	1750	,	1740	}	,
    {	0.01313	,	0.013014	,	1760	,	1750	}	,
    {	0.013246	,	0.01313	,	1770	,	1760	}	,
    {	0.013361	,	0.013246	,	1780	,	1770	}	,
    {	0.013476	,	0.013361	,	1790	,	1780	}	,
    {	0.013591	,	0.013476	,	1800	,	1790	}	,
    {	0.013706	,	0.013591	,	1810	,	1800	}	,
    {	0.01382	,	0.013706	,	1820	,	1810	}	,
 };

 BioThermoMap V2T_E[] = { // -270 ~ 1000 Deg.C
    {	-0.009797,	-0.009835,	-260	,	-270	}	,
    {	-0.009718,	-0.009797,	-250	,	-260	}	,
    {	-0.009604,	-0.009718,	-240	,	-250	}	,
    {	-0.009455,	-0.009604,	-230	,	-240	}	,
    {	-0.009274,	-0.009455,	-220	,	-230	}	,
    {	-0.009063,	-0.009274,	-210	,	-220	}	,
    {	-0.008825,	-0.009063,	-200	,	-210	}	,
    {	-0.008561,	-0.008825,	-190	,	-200	}	,
    {	-0.008273,	-0.008561,	-180	,	-190	}	,
    {	-0.007963,	-0.008273,	-170	,	-180	}	,
    {	-0.007632,	-0.007963,	-160	,	-170	}	,
    {	-0.007279,	-0.007632,	-150	,	-160	}	,
    {	-0.006907,	-0.007279,	-140	,	-150	}	,
    {	-0.006516,	-0.006907,	-130	,	-140	}	,
    {	-0.006107,	-0.006516,	-120	,	-130	}	,
    {	-0.005681,	-0.006107,	-110	,	-120	}	,
    {	-0.005237,	-0.005681,	-100	,	-110	}	,
    {	-0.004777,	-0.005237,	-90	,	-100	}	,
    {	-0.004302,	-0.004777,	-80	,	-90	}	,
    {	-0.003811,	-0.004302,	-70	,	-80	}	,
    {	-0.003306,	-0.003811,	-60	,	-70	}	,
    {	-0.002787,	-0.003306,	-50	,	-60	}	,
    {	-0.002255,	-0.002787,	-40	,	-50	}	,
    {	-0.001709,	-0.002255,	-30	,	-40	}	,
    {	-0.001152,	-0.001709,	-20	,	-30	}	,
    {	-0.000582,	-0.001152,	-10	,	-20	}	,
    {	     0	,	-0.000582,	  0	,	-10	}	,
    {	0.000591	,	     0	,	 10	,	  0	}	,
    {	0.001192	,	0.000591	,	 20	,	 10	}	,
    {	0.001801	,	0.001192	,	 30	,	 20	}	,
    {	0.00242	,	0.001801	,	 40	,	 30	}	,
    {	0.003048	,	0.00242	,	 50	,	 40	}	,
    {	0.003685	,	0.003048	,	 60	,	 50	}	,
    {	0.00433	,	0.003685	,	 70	,	 60	}	,
    {	0.004985	,	0.00433	,	 80	,	 70	}	,
    {	0.005648	,	0.004985	,	 90	,	 80	}	,
    {	0.006319	,	0.005648	,	100	,	 90	}	,
    {	0.006998	,	0.006319	,	110	,	100	}	,
    {	0.007685	,	0.006998	,	120	,	110	}	,
    {	0.008379	,	0.007685	,	130	,	120	}	,
    {	0.009081	,	0.008379	,	140	,	130	}	,
    {	0.009789	,	0.009081	,	150	,	140	}	,
    {	0.010503	,	0.009789	,	160	,	150	}	,
    {	0.011224	,	0.010503	,	170	,	160	}	,
    {	0.011951	,	0.011224	,	180	,	170	}	,
    {	0.012684	,	0.011951	,	190	,	180	}	,
    {	0.013421	,	0.012684	,	200	,	190	}	,
    {	0.014164	,	0.013421	,	210	,	200	}	,
    {	0.014912	,	0.014164	,	220	,	210	}	,
    {	0.015664	,	0.014912	,	230	,	220	}	,
    {	0.01642	,	0.015664	,	240	,	230	}	,
    {	0.017181	,	0.01642	,	250	,	240	}	,
    {	0.017945	,	0.017181	,	260	,	250	}	,
    {	0.018713	,	0.017945	,	270	,	260	}	,
    {	0.019484	,	0.018713	,	280	,	270	}	,
    {	0.020259	,	0.019484	,	290	,	280	}	,
    {	0.021036	,	0.020259	,	300	,	290	}	,
    {	0.021817	,	0.021036	,	310	,	300	}	,
    {	0.0226	,	0.021817	,	320	,	310	}	,
    {	0.023386	,	0.0226	,	330	,	320	}	,
    {	0.024174	,	0.023386	,	340	,	330	}	,
    {	0.024964	,	0.024174	,	350	,	340	}	,
    {	0.025757	,	0.024964	,	360	,	350	}	,
    {	0.026552	,	0.025757	,	370	,	360	}	,
    {	0.027348	,	0.026552	,	380	,	370	}	,
    {	0.028146	,	0.027348	,	390	,	380	}	,
    {	0.028946	,	0.028146	,	400	,	390	}	,
    {	0.029747	,	0.028946	,	410	,	400	}	,
    {	0.03055	,	0.029747	,	420	,	410	}	,
    {	0.031354	,	0.03055	,	430	,	420	}	,
    {	0.032159	,	0.031354	,	440	,	430	}	,
    {	0.032965	,	0.032159	,	450	,	440	}	,
    {	0.033772	,	0.032965	,	460	,	450	}	,
    {	0.034579	,	0.033772	,	470	,	460	}	,
    {	0.035387	,	0.034579	,	480	,	470	}	,
    {	0.036196	,	0.035387	,	490	,	480	}	,
    {	0.037005	,	0.036196	,	500	,	490	}	,
    {	0.037815	,	0.037005	,	510	,	500	}	,
    {	0.038624	,	0.037815	,	520	,	510	}	,
    {	0.039434	,	0.038624	,	530	,	520	}	,
    {	0.040243	,	0.039434	,	540	,	530	}	,
    {	0.041053	,	0.040243	,	550	,	540	}	,
    {	0.041862	,	0.041053	,	560	,	550	}	,
    {	0.042671	,	0.041862	,	570	,	560	}	,
    {	0.043479	,	0.042671	,	580	,	570	}	,
    {	0.044286	,	0.043479	,	590	,	580	}	,
    {	0.045093	,	0.044286	,	600	,	590	}	,
    {	0.0459	,	0.045093	,	610	,	600	}	,
    {	0.046705	,	0.0459	,	620	,	610	}	,
    {	0.047509	,	0.046705	,	630	,	620	}	,
    {	0.048313	,	0.047509	,	640	,	630	}	,
    {	0.049116	,	0.048313	,	650	,	640	}	,
    {	0.049917	,	0.049116	,	660	,	650	}	,
    {	0.050718	,	0.049917	,	670	,	660	}	,
    {	0.051517	,	0.050718	,	680	,	670	}	,
    {	0.052315	,	0.051517	,	690	,	680	}	,
    {	0.053112	,	0.052315	,	700	,	690	}	,
    {	0.053908	,	0.053112	,	710	,	700	}	,
    {	0.054703	,	0.053908	,	720	,	710	}	,
    {	0.055497	,	0.054703	,	730	,	720	}	,
    {	0.056289	,	0.055497	,	740	,	730	}	,
    {	0.05708	,	0.056289	,	750	,	740	}	,
    {	0.05787	,	0.05708	,	760	,	750	}	,
    {	0.058659	,	0.05787	,	770	,	760	}	,
    {	0.059446	,	0.058659	,	780	,	770	}	,
    {	0.060232	,	0.059446	,	790	,	780	}	,
    {	0.061017	,	0.060232	,	800	,	790	}	,
    {	0.061801	,	0.061017	,	810	,	800	}	,
    {	0.062583	,	0.061801	,	820	,	810	}	,
    {	0.063364	,	0.062583	,	830	,	820	}	,
    {	0.064144	,	0.063364	,	840	,	830	}	,
    {	0.064922	,	0.064144	,	850	,	840	}	,
    {	0.065698	,	0.064922	,	860	,	850	}	,
    {	0.066473	,	0.065698	,	870	,	860	}	,
    {	0.067246	,	0.066473	,	880	,	870	}	,
    {	0.068017	,	0.067246	,	890	,	880	}	,
    {	0.068787	,	0.068017	,	900	,	890	}	,
    {	0.069554	,	0.068787	,	910	,	900	}	,
    {	0.070319	,	0.069554	,	920	,	910	}	,
    {	0.071082	,	0.070319	,	930	,	920	}	,
    {	0.071844	,	0.071082	,	940	,	930	}	,
    {	0.072603	,	0.071844	,	950	,	940	}	,
    {	0.07336	,	0.072603	,	960	,	950	}	,
    {	0.074115	,	0.07336	,	970	,	960	}	,
    {	0.074869	,	0.074115	,	980	,	970	}	,
    {	0.075621	,	0.074869	,	990	,	980	}	,
    {	0.076373	,	0.075621	,	1000	,	990	}	,
 };

 BioThermoMap V2T_J[] = { // -210 ~ 1200 Deg.C
    {	 -0.00789,	-0.008095,	-200	,	-210	}	,
    {	-0.007659,	 -0.00789,	-190	,	-200	}	,
    {	-0.007403,	-0.007659,	-180	,	-190	}	,
    {	-0.007123,	-0.007403,	-170	,	-180	}	,
    {	-0.006821,	-0.007123,	-160	,	-170	}	,
    {	  -0.0065,	-0.006821,	-150	,	-160	}	,
    {	-0.006159,	  -0.0065,	-140	,	-150	}	,
    {	-0.005801,	-0.006159,	-130	,	-140	}	,
    {	-0.005426,	-0.005801,	-120	,	-130	}	,
    {	-0.005037,	-0.005426,	-110	,	-120	}	,
    {	-0.004633,	-0.005037,	-100	,	-110	}	,
    {	-0.004215,	-0.004633,	-90	,	-100	}	,
    {	-0.003786,	-0.004215,	-80	,	-90	}	,
    {	-0.003344,	-0.003786,	-70	,	-80	}	,
    {	-0.002893,	-0.003344,	-60	,	-70	}	,
    {	-0.002431,	-0.002893,	-50	,	-60	}	,
    {	-0.001961,	-0.002431,	-40	,	-50	}	,
    {	-0.001482,	-0.001961,	-30	,	-40	}	,
    {	-0.000995,	-0.001482,	-20	,	-30	}	,
    {	-0.000501,	-0.000995,	-10	,	-20	}	,
    {	        0,	-0.000501,	  0	,	-10	}	,
    {	0.000507	,	     0	,	 10	,	0	   }	,
    {	0.001019	,	0.000507	,	 20	,	10	   }	,
    {	0.001537	,	0.001019	,	 30	,	20	   }	,
    {	0.002059	,	0.001537	,	 40	,	30	   }	,
    {	0.002585	,	0.002059	,	 50	,	40	   }	,
    {	0.003116	,	0.002585	,	 60	,	50	   }	,
    {	0.00365	,	0.003116	,	 70	,	60	   }	,
    {	0.004187	,	0.00365	,   80	,	70	   }	,
    {	0.004726	,	0.004187	,	 90	,	80	   }	,
    {	0.005269	,	0.004726	,	100	,	90	   }	,
    {	0.005814	,	0.005269	,	110	,	100	}	,
    {	0.00636	,	0.005814	,	120	,	110	}	,
    {	0.006909	,	0.00636	,	130	,	120	}	,
    {	0.007459	,	0.006909	,	140	,	130	}	,
    {	0.00801	,	0.007459	,	150	,	140	}	,
    {	0.008562	,	0.00801	,	160	,	150	}	,
    {	0.009115	,	0.008562	,	170	,	160	}	,
    {	0.009669	,	0.009115	,	180	,	170	}	,
    {	0.010224	,	0.009669	,	190	,	180	}	,
    {	0.010779	,	0.010224	,	200	,	190	}	,
    {	0.011334	,	0.010779	,	210	,	200	}	,
    {	0.011889	,	0.011334	,	220	,	210	}	,
    {	0.012445	,	0.011889	,	230	,	220	}	,
    {	 0.013	,	0.012445	,	240	,	230	}	,
    {	0.013555	,	 0.013	,	250	,	240	}	,
    {	0.01411	,	0.013555	,	260	,	250	}	,
    {	0.014665	,	0.01411	,	270	,	260	}	,
    {	0.015219	,	0.014665	,	280	,	270	}	,
    {	0.015773	,	0.015219	,	290	,	280	}	,
    {	0.016327	,	0.015773	,	300	,	290	}	,
    {	0.016881	,	0.016327	,	310	,	300	}	,
    {	0.017434	,	0.016881	,	320	,	310	}	,
    {	0.017986	,	0.017434	,	330	,	320	}	,
    {	0.018538	,	0.017986	,	340	,	330	}	,
    {	0.01909	,	0.018538	,	350	,	340	}	,
    {	0.019642	,	0.01909	,	360	,	350	}	,
    {	0.020194	,	0.019642	,	370	,	360	}	,
    {	0.020745	,	0.020194	,	380	,	370	}	,
    {	0.021297	,	0.020745	,	390	,	380	}	,
    {	0.021848	,	0.021297	,	400	,	390	}	,
    {	0.0224	,	0.021848	,	410	,	400	}	,
    {	0.022952	,	0.0224	,	420	,	410	}	,
    {	0.023504	,	0.022952	,	430	,	420	}	,
    {	0.024057	,	0.023504	,	440	,	430	}	,
    {	0.02461	,	0.024057	,	450	,	440	}	,
    {	0.025164	,	0.02461	,	460	,	450	}	,
    {	0.02572	,	0.025164	,	470	,	460	}	,
    {	0.026276	,	0.02572	,	480	,	470	}	,
    {	0.026834	,	0.026276	,	490	,	480	}	,
    {	0.027393	,	0.026834	,	500	,	490	}	,
    {	0.027953	,	0.027393	,	510	,	500	}	,
    {	0.028516	,	0.027953	,	520	,	510	}	,
    {	0.02908	,	0.028516	,	530	,	520	}	,
    {	0.029647	,	0.02908	,	540	,	530	}	,
    {	0.030216	,	0.029647	,	550	,	540	}	,
    {	0.030788	,	0.030216	,	560	,	550	}	,
    {	0.031362	,	0.030788	,	570	,	560	}	,
    {	0.031939	,	0.031362	,	580	,	570	}	,
    {	0.032519	,	0.031939	,	590	,	580	}	,
    {	0.033102	,	0.032519	,	600	,	590	}	,
    {	0.033689	,	0.033102	,	610	,	600	}	,
    {	0.034279	,	0.033689	,	620	,	610	}	,
    {	0.034873	,	0.034279	,	630	,	620	}	,
    {	0.03547	,	0.034873	,	640	,	630	}	,
    {	0.036071	,	0.03547	,	650	,	640	}	,
    {	0.036675	,	0.036071	,	660	,	650	}	,
    {	0.037284	,	0.036675	,	670	,	660	}	,
    {	0.037896	,	0.037284	,	680	,	670	}	,
    {	0.038512	,	0.037896	,	690	,	680	}	,
    {	0.039132	,	0.038512	,	700	,	690	}	,
    {	0.039755	,	0.039132	,	710	,	700	}	,
    {	0.040382	,	0.039755	,	720	,	710	}	,
    {	0.041012	,	0.040382	,	730	,	720	}	,
    {	0.041645	,	0.041012	,	740	,	730	}	,
    {	0.042281	,	0.041645	,	750	,	740	}	,
    {	0.042919	,	0.042281	,	760	,	750	}	,
    {	0.043559	,	0.042919	,	770	,	760	}	,
    {	0.044203	,	0.043559	,	780	,	770	}	,
    {	0.044848	,	0.044203	,	790	,	780	}	,
    {	0.045494	,	0.044848	,	800	,	790	}	,
    {	0.046141	,	0.045494	,	810	,	800	}	,
    {	0.046786	,	0.046141	,	820	,	810	}	,
    {	0.047431	,	0.046786	,	830	,	820	}	,
    {	0.048074	,	0.047431	,	840	,	830	}	,
    {	0.048715	,	0.048074	,	850	,	840	}	,
    {	0.049353	,	0.048715	,	860	,	850	}	,
    {	0.049989	,	0.049353	,	870	,	860	}	,
    {	0.050622	,	0.049989	,	880	,	870	}	,
    {	0.051251	,	0.050622	,	890	,	880	}	,
    {	0.051877	,	0.051251	,	900	,	890	}	,
    {	0.0525	,	0.051877	,	910	,	900	}	,
    {	0.053119	,	0.0525	,	920	,	910	}	,
    {	0.053735	,	0.053119	,	930	,	920	}	,
    {	0.054347	,	0.053735	,	940	,	930	}	,
    {	0.054956	,	0.054347	,	950	,	940	}	,
    {	0.055561	,	0.054956	,	960	,	950	}	,
    {	0.056164	,	0.055561	,	970	,	960	}	,
    {	0.056763	,	0.056164	,	980	,	970	}	,
    {	0.05736	,	0.056763	,	990	,	980	}	,
    {	0.057953	,	0.05736	,	1000	,	990	}	,
    {	0.058545	,	0.057953	,	1010	,	1000	}	,
    {	0.059134	,	0.058545	,	1020	,	1010	}	,
    {	0.059721	,	0.059134	,	1030	,	1020	}	,
    {	0.060307	,	0.059721	,	1040	,	1030	}	,
    {	0.06089	,	0.060307	,	1050	,	1040	}	,
    {	0.061473	,	0.06089	,	1060	,	1050	}	,
    {	0.062054	,	0.061473	,	1070	,	1060	}	,
    {	0.062634	,	0.062054	,	1080	,	1070	}	,
    {	0.063214	,	0.062634	,	1090	,	1080	}	,
    {	0.063792	,	0.063214	,	1100	,	1090	}	,
    {	0.06437	,	0.063792	,	1110	,	1100	}	,
    {	0.064948	,	0.06437	,	1120	,	1110	}	,
    {	0.065525	,	0.064948	,	1130	,	1120	}	,
    {	0.066102	,	0.065525	,	1140	,	1130	}	,
    {	0.066679	,	0.066102	,	1150	,	1140	}	,
    {	0.067255	,	0.066679	,	1160	,	1150	}	,
    {	0.067831	,	0.067255	,	1170	,	1160	}	,
    {	0.068406	,	0.067831	,	1180	,	1170	}	,
    {	0.06898	,	0.068406	,	1190	,	1180	}	,
    {	0.069553	,	0.06898	,	1200	,	1190	}	,
 };

 BioThermoMap V2T_K[] = { // -270 ~ 1372 Deg.C
    {	-0.006441,	-0.006458,	-260	,	-270	}	,
    {	-0.006404,	-0.006441,	-250	,	-260	}	,
    {	-0.006344,	-0.006404,	-240	,	-250	}	,
    {	-0.006262,	-0.006344,	-230	,	-240	}	,
    {	-0.006158,	-0.006262,	-220	,	-230	}	,
    {	-0.006035,	-0.006158,	-210	,	-220	}	,
    {	-0.005891,	-0.006035,	-200	,	-210	}	,
    {	-0.00573	,	-0.005891,	-190	,	-200	}	,
    {	-0.00555	,	-0.00573	,	-180	,	-190	}	,
    {	-0.005354,	-0.00555	,	-170	,	-180	}	,
    {	-0.005141,	-0.005354,	-160	,	-170	}	,
    {	-0.004913,	-0.005141,	-150	,	-160	}	,
    {	-0.004669,	-0.004913,	-140	,	-150	}	,
    {	-0.004411,	-0.004669,	-130	,	-140	}	,
    {	-0.004138,	-0.004411,	-120	,	-130	}	,
    {	-0.003852,	-0.004138,	-110	,	-120	}	,
    {	-0.003554,	-0.003852,	-100	,	-110	}	,
    {	-0.003243,	-0.003554,	-90	,	-100	}	,
    {	-0.00292	,	-0.003243,	-80	,	-90	}	,
    {	-0.002587,	-0.00292	,	-70	,	-80	}	,
    {	-0.002243,	-0.002587,	-60	,	-70	}	,
    {	-0.001889,	-0.002243,	-50	,	-60	}	,
    {	-0.001527,	-0.001889,	-40	,	-50	}	,
    {	-0.001156,	-0.001527,	-30	,	-40	}	,
    {	-0.000778,	-0.001156,	-20	,	-30	}	,
    {	-0.000392,	-0.000778,	-10	,	-20	}	,
    {	        0,	-0.000392,	  0	,	-10	}	,
    {	0.000397	,	        0,	 10	,	0  	}	,
    {	0.000798	,	0.000397	,	 20	,	10 	}	,
    {	0.001203	,	0.000798	,	 30	,	20 	}	,
    {	0.001612	,	0.001203	,	 40	,	30 	}	,
    {	0.002023	,	0.001612	,	 50	,	40 	}	,
    {	0.002436	,	0.002023	,	 60	,	50 	}	,
    {	0.002851	,	0.002436	,	 70	,	60 	}	,
    {	0.003267	,	0.002851	,	 80	,	70	   }	,
    {	0.003682	,	0.003267	,	 90	,	80	   }	,
    {	0.004096	,	0.003682	,	100	,	90 	}	,
    {	0.004509	,	0.004096	,	110	,	100	}	,
    {	0.00492	,	0.004509	,	120	,	110	}	,
    {	0.005328	,	0.00492	,	130	,	120	}	,
    {	0.005735	,	0.005328	,	140	,	130	}	,
    {	0.006138	,	0.005735	,	150	,	140	}	,
    {	0.00654	,	0.006138	,	160	,	150	}	,
    {	0.006941	,	0.00654	,	170	,	160	}	,
    {	0.00734	,	0.006941	,	180	,	170	}	,
    {	0.007739	,	0.00734	,	190	,	180	}	,
    {	0.008138	,	0.007739	,	200	,	190	}	,
    {	0.008539	,	0.008138	,	210	,	200	}	,
    {	0.00894	,	0.008539	,	220	,	210	}	,
    {	0.009343	,	0.00894	,	230	,	220	}	,
    {	0.009747	,	0.009343	,	240	,	230	}	,
    {	0.010153	,	0.009747	,	250	,	240	}	,
    {	0.010561	,	0.010153	,	260	,	250	}	,
    {	0.010971	,	0.010561	,	270	,	260	}	,
    {	0.011382	,	0.010971	,	280	,	270	}	,
    {	0.011795	,	0.011382	,	290	,	280	}	,
    {	0.012209	,	0.011795	,	300	,	290	}	,
    {	0.012624	,	0.012209	,	310	,	300	}	,
    {	0.01304	,	0.012624	,	320	,	310	}	,
    {	0.013457	,	0.01304	,	330	,	320	}	,
    {	0.013874	,	0.013457	,	340	,	330	}	,
    {	0.014293	,	0.013874	,	350	,	340	}	,
    {	0.014713	,	0.014293	,	360	,	350	}	,
    {	0.015133	,	0.014713	,	370	,	360	}	,
    {	0.015554	,	0.015133	,	380	,	370	}	,
    {	0.015975	,	0.015554	,	390	,	380	}	,
    {	0.016397	,	0.015975	,	400	,	390	}	,
    {	0.01682	,	0.016397	,	410	,	400	}	,
    {	0.017243	,	0.01682	,	420	,	410	}	,
    {	0.017667	,	0.017243	,	430	,	420	}	,
    {	0.018091	,	0.017667	,	440	,	430	}	,
    {	0.018516	,	0.018091	,	450	,	440	}	,
    {	0.018941	,	0.018516	,	460	,	450	}	,
    {	0.019366	,	0.018941	,	470	,	460	}	,
    {	0.019792	,	0.019366	,	480	,	470	}	,
    {	0.020218	,	0.019792	,	490	,	480	}	,
    {	0.020644	,	0.020218	,	500	,	490	}	,
    {	0.021071	,	0.020644	,	510	,	500	}	,
    {	0.021497	,	0.021071	,	520	,	510	}	,
    {	0.021924	,	0.021497	,	530	,	520	}	,
    {	0.02235	,	0.021924	,	540	,	530	}	,
    {	0.022776	,	0.02235	,	550	,	540	}	,
    {	0.023203	,	0.022776	,	560	,	550	}	,
    {	0.023629	,	0.023203	,	570	,	560	}	,
    {	0.024055	,	0.023629	,	580	,	570	}	,
    {	0.02448	,	0.024055	,	590	,	580	}	,
    {	0.024905	,	0.02448	,	600	,	590	}	,
    {	0.02533	,	0.024905	,	610	,	600	}	,
    {	0.025755	,	0.02533	,	620	,	610	}	,
    {	0.026179	,	0.025755	,	630	,	620	}	,
    {	0.026602	,	0.026179	,	640	,	630	}	,
    {	0.027025	,	0.026602	,	650	,	640	}	,
    {	0.027447	,	0.027025	,	660	,	650	}	,
    {	0.027869	,	0.027447	,	670	,	660	}	,
    {	0.028289	,	0.027869	,	680	,	670	}	,
    {	0.02871	,	0.028289	,	690	,	680	}	,
    {	0.029129	,	0.02871	,	700	,	690	}	,
    {	0.029548	,	0.029129	,	710	,	700	}	,
    {	0.029965	,	0.029548	,	720	,	710	}	,
    {	0.030382	,	0.029965	,	730	,	720	}	,
    {	0.030798	,	0.030382	,	740	,	730	}	,
    {	0.031213	,	0.030798	,	750	,	740	}	,
    {	0.031628	,	0.031213	,	760	,	750	}	,
    {	0.032041	,	0.031628	,	770	,	760	}	,
    {	0.032453	,	0.032041	,	780	,	770	}	,
    {	0.032865	,	0.032453	,	790	,	780	}	,
    {	0.033275	,	0.032865	,	800	,	790	}	,
    {	0.033685	,	0.033275	,	810	,	800	}	,
    {	0.034093	,	0.033685	,	820	,	810	}	,
    {	0.034501	,	0.034093	,	830	,	820	}	,
    {	0.034908	,	0.034501	,	840	,	830	}	,
    {	0.035313	,	0.034908	,	850	,	840	}	,
    {	0.035718	,	0.035313	,	860	,	850	}	,
    {	0.036121	,	0.035718	,	870	,	860	}	,
    {	0.036524	,	0.036121	,	880	,	870	}	,
    {	0.036925	,	0.036524	,	890	,	880	}	,
    {	0.037326	,	0.036925	,	900	,	890	}	,
    {	0.037725	,	0.037326	,	910	,	900	}	,
    {	0.038124	,	0.037725	,	920	,	910	}	,
    {	0.038522	,	0.038124	,	930	,	920	}	,
    {	0.038918	,	0.038522	,	940	,	930	}	,
    {	0.039314	,	0.038918	,	950	,	940	}	,
    {	0.039708	,	0.039314	,	960	,	950	}	,
    {	0.040101	,	0.039708	,	970	,	960	}	,
    {	0.040494	,	0.040101	,	980	,	970	}	,
    {	0.040885	,	0.040494	,	990	,	980	}	,
    {	0.041276	,	0.040885	,	1000	,	990	}	,
    {	0.041665	,	0.041276	,	1010	,	1000	}	,
    {	0.042053	,	0.041665	,	1020	,	1010	}	,
    {	0.04244	,	0.042053	,	1030	,	1020	}	,
    {	0.042826	,	0.04244	,	1040	,	1030	}	,
    {	0.043211	,	0.042826	,	1050	,	1040	}	,
    {	0.043595	,	0.043211	,	1060	,	1050	}	,
    {	0.043978	,	0.043595	,	1070	,	1060	}	,
    {	0.044359	,	0.043978	,	1080	,	1070	}	,
    {	0.04474	,	0.044359	,	1090	,	1080	}	,
    {	0.045119	,	0.04474	,	1100	,	1090	}	,
    {	0.045497	,	0.045119	,	1110	,	1100	}	,
    {	0.045873	,	0.045497	,	1120	,	1110	}	,
    {	0.046249	,	0.045873	,	1130	,	1120	}	,
    {	0.046623	,	0.046249	,	1140	,	1130	}	,
    {	0.046995	,	0.046623	,	1150	,	1140	}	,
    {	0.047367	,	0.046995	,	1160	,	1150	}	,
    {	0.047737	,	0.047367	,	1170	,	1160	}	,
    {	0.048105	,	0.047737	,	1180	,	1170	}	,
    {	0.048473	,	0.048105	,	1190	,	1180	}	,
    {	0.048838	,	0.048473	,	1200	,	1190	}	,
    {	0.049202	,	0.048838	,	1210	,	1200	}	,
    {	0.049565	,	0.049202	,	1220	,	1210	}	,
    {	0.049926	,	0.049565	,	1230	,	1220	}	,
    {	0.050286	,	0.049926	,	1240	,	1230	}	,
    {	0.050644	,	0.050286	,	1250	,	1240	}	,
    {	0.051	   ,	0.050644	,	1260	,	1250	}	,
    {	0.051355	,	0.051	   ,	1270	,	1260	}	,
    {	0.051708	,	0.051355	,	1280	,	1270	}	,
    {	0.05206	,	0.051708	,	1290	,	1280	}	,
    {	0.05241	,	0.05206	,	1300	,	1290	}	,
    {	0.052759	,	0.05241	,	1310	,	1300	}	,
    {	0.053106	,	0.052759	,	1320	,	1310	}	,
    {	0.053451	,	0.053106	,	1330	,	1320	}	,
    {	0.053795	,	0.053451	,	1340	,	1330	}	,
    {	0.054138	,	0.053795	,	1350	,	1340	}	,
    {	0.054479	,	0.054138	,	1360	,	1350	}	,
    {	0.054819	,	0.054479	,	1370	,	1360	}	,
    {	0.054886	,	0.054819	,	1372	,	1370	}	,
 };

 BioThermoMap V2T_R[] = { //-50 ~ 1768 Deg.C
    {	-0.000188,	-0.000226,	-40	,	-50	}	,
    {	-0.000145,	-0.000188,	-30	,	-40	}	,
    {	-0.0001	,	-0.000145,	-20	,	-30	}	,
    {	-0.000051,	-0.0001	,	-10	,	-20	}	,
    {	     0	,	-0.000051,	0  	,	-10	}	,
    {	0.000054	,	     0	,	10 	,	0  	}	,
    {	0.000111	,	0.000054	,	20 	,	10 	}	,
    {	0.000171	,	0.000111	,	30 	,	20 	}	,
    {	0.000232	,	0.000171	,	40 	,	30 	}	,
    {	0.000296	,	0.000232	,	50 	,	40 	}	,
    {	0.000363	,	0.000296	,	60 	,	50 	}	,
    {	0.000431	,	0.000363	,	70 	,	60 	}	,
    {	0.000501	,	0.000431	,	80 	,	70 	}	,
    {	0.000573	,	0.000501	,	90 	,	80 	}	,
    {	0.000647	,	0.000573	,	100	,	90 	}	,
    {	0.000723	,	0.000647	,	110	,	100	}	,
    {	0.0008	,	0.000723	,	120	,	110	}	,
    {	0.000879	,	0.0008	,	130	,	120	}	,
    {	0.000959	,	0.000879	,	140	,	130	}	,
    {	0.001041	,	0.000959	,	150	,	140	}	,
    {	0.001124	,	0.001041	,	160	,	150	}	,
    {	0.001208	,	0.001124	,	170	,	160	}	,
    {	0.001294	,	0.001208	,	180	,	170	}	,
    {	0.001381	,	0.001294	,	190	,	180	}	,
    {	0.001469	,	0.001381	,	200	,	190	}	,
    {	0.001558	,	0.001469	,	210	,	200	}	,
    {	0.001648	,	0.001558	,	220	,	210	}	,
    {	0.001739	,	0.001648	,	230	,	220	}	,
    {	0.001831	,	0.001739	,	240	,	230	}	,
    {	0.001923	,	0.001831	,	250	,	240	}	,
    {	0.002017	,	0.001923	,	260	,	250	}	,
    {	0.002112	,	0.002017	,	270	,	260	}	,
    {	0.002207	,	0.002112	,	280	,	270	}	,
    {	0.002304	,	0.002207	,	290	,	280	}	,
    {	0.002401	,	0.002304	,	300	,	290	}	,
    {	0.002498	,	0.002401	,	310	,	300	}	,
    {	0.002597	,	0.002498	,	320	,	310	}	,
    {	0.002696	,	0.002597	,	330	,	320	}	,
    {	0.002796	,	0.002696	,	340	,	330	}	,
    {	0.002896	,	0.002796	,	350	,	340	}	,
    {	0.002997	,	0.002896	,	360	,	350	}	,
    {	0.003099	,	0.002997	,	370	,	360	}	,
    {	0.003201	,	0.003099	,	380	,	370	}	,
    {	0.003304	,	0.003201	,	390	,	380	}	,
    {	0.003408	,	0.003304	,	400	,	390	}	,
    {	0.003512	,	0.003408	,	410	,	400	}	,
    {	0.003616	,	0.003512	,	420	,	410	}	,
    {	0.003721	,	0.003616	,	430	,	420	}	,
    {	0.003827	,	0.003721	,	440	,	430	}	,
    {	0.003933	,	0.003827	,	450	,	440	}	,
    {	0.00404	,	0.003933	,	460	,	450	}	,
    {	0.004147	,	0.00404	,	470	,	460	}	,
    {	0.004255	,	0.004147	,	480	,	470	}	,
    {	0.004363	,	0.004255	,	490	,	480	}	,
    {	0.004471	,	0.004363	,	500	,	490	}	,
    {	0.00458	,	0.004471	,	510	,	500	}	,
    {	0.00469	,	0.00458	,	520	,	510	}	,
    {	0.0048	,	0.00469	,	530	,	520	}	,
    {	0.00491	,	0.0048	,	540	,	530	}	,
    {	0.005021	,	0.00491	,	550	,	540	}	,
    {	0.005133	,	0.005021	,	560	,	550	}	,
    {	0.005245	,	0.005133	,	570	,	560	}	,
    {	0.005357	,	0.005245	,	580	,	570	}	,
    {	0.00547	,	0.005357	,	590	,	580	}	,
    {	0.005583	,	0.00547	,	600	,	590	}	,
    {	0.005697	,	0.005583	,	610	,	600	}	,
    {	0.005812	,	0.005697	,	620	,	610	}	,
    {	0.005926	,	0.005812	,	630	,	620	}	,
    {	0.006041	,	0.005926	,	640	,	630	}	,
    {	0.006157	,	0.006041	,	650	,	640	}	,
    {	0.006273	,	0.006157	,	660	,	650	}	,
    {	0.00639	,	0.006273	,	670	,	660	}	,
    {	0.006507	,	0.00639	,	680	,	670	}	,
    {	0.006625	,	0.006507	,	690	,	680	}	,
    {	0.006743	,	0.006625	,	700	,	690	}	,
    {	0.006861	,	0.006743	,	710	,	700	}	,
    {	0.00698	,	0.006861	,	720	,	710	}	,
    {	0.0071	,	0.00698	,	730	,	720	}	,
    {	0.00722	,	0.0071	,	740	,	730	}	,
    {	0.00734	,	0.00722	,	750	,	740	}	,
    {	0.007461	,	0.00734	,	760	,	750	}	,
    {	0.007583	,	0.007461	,	770	,	760	}	,
    {	0.007705	,	0.007583	,	780	,	770	}	,
    {	0.007827	,	0.007705	,	790	,	780	}	,
    {	0.00795	,	0.007827	,	800	,	790	}	,
    {	0.008073	,	0.00795	,	810	,	800	}	,
    {	0.008197	,	0.008073	,	820	,	810	}	,
    {	0.008321	,	0.008197	,	830	,	820	}	,
    {	0.008446	,	0.008321	,	840	,	830	}	,
    {	0.008571	,	0.008446	,	850	,	840	}	,
    {	0.008697	,	0.008571	,	860	,	850	}	,
    {	0.008823	,	0.008697	,	870	,	860	}	,
    {	0.00895	,	0.008823	,	880	,	870	}	,
    {	0.009077	,	0.00895	,	890	,	880	}	,
    {	0.009205	,	0.009077	,	900	,	890	}	,
    {	0.009333	,	0.009205	,	910	,	900	}	,
    {	0.009461	,	0.009333	,	920	,	910	}	,
    {	0.00959	,	0.009461	,	930	,	920	}	,
    {	0.00972	,	0.00959	,	940	,	930	}	,
    {	0.00985	,	0.00972	,	950	,	940	}	,
    {	0.00998	,	0.00985	,	960	,	950	}	,
    {	0.010111	,	0.00998	,	970	,	960	}	,
    {	0.010242	,	0.010111	,	980	,	970	}	,
    {	0.010374	,	0.010242	,	990	,	980	}	,
    {	0.010506	,	0.010374	,	1000	,	990	}	,
    {	0.010638	,	0.010506	,	1010	,	1000	}	,
    {	0.010771	,	0.010638	,	1020	,	1010	}	,
    {	0.010905	,	0.010771	,	1030	,	1020	}	,
    {	0.011039	,	0.010905	,	1040	,	1030	}	,
    {	0.011173	,	0.011039	,	1050	,	1040	}	,
    {	0.011307	,	0.011173	,	1060	,	1050	}	,
    {	0.011442	,	0.011307	,	1070	,	1060	}	,
    {	0.011578	,	0.011442	,	1080	,	1070	}	,
    {	0.011714	,	0.011578	,	1090	,	1080	}	,
    {	0.01185	,	0.011714	,	1100	,	1090	}	,
    {	0.011986	,	0.01185	,	1110	,	1100	}	,
    {	0.012123	,	0.011986	,	1120	,	1110	}	,
    {	0.01226	,	0.012123	,	1130	,	1120	}	,
    {	0.012397	,	0.01226	,	1140	,	1130	}	,
    {	0.012535	,	0.012397	,	1150	,	1140	}	,
    {	0.012673	,	0.012535	,	1160	,	1150	}	,
    {	0.012812	,	0.012673	,	1170	,	1160	}	,
    {	0.01295	,	0.012812	,	1180	,	1170	}	,
    {	0.013089	,	0.01295	,	1190	,	1180	}	,
    {	0.013228	,	0.013089	,	1200	,	1190	}	,
    {	0.013367	,	0.013228	,	1210	,	1200	}	,
    {	0.013507	,	0.013367	,	1220	,	1210	}	,
    {	0.013646	,	0.013507	,	1230	,	1220	}	,
    {	0.013786	,	0.013646	,	1240	,	1230	}	,
    {	0.013926	,	0.013786	,	1250	,	1240	}	,
    {	0.014066	,	0.013926	,	1260	,	1250	}	,
    {	0.014207	,	0.014066	,	1270	,	1260	}	,
    {	0.014347	,	0.014207	,	1280	,	1270	}	,
    {	0.014488	,	0.014347	,	1290	,	1280	}	,
    {	0.014629	,	0.014488	,	1300	,	1290	}	,
    {	0.01477	,	0.014629	,	1310	,	1300	}	,
    {	0.014911	,	0.01477	,	1320	,	1310	}	,
    {	0.015052	,	0.014911	,	1330	,	1320	}	,
    {	0.015193	,	0.015052	,	1340	,	1330	}	,
    {	0.015334	,	0.015193	,	1350	,	1340	}	,
    {	0.015475	,	0.015334	,	1360	,	1350	}	,
    {	0.015616	,	0.015475	,	1370	,	1360	}	,
    {	0.015758	,	0.015616	,	1380	,	1370	}	,
    {	0.015899	,	0.015758	,	1390	,	1380	}	,
    {	0.01604	,	0.015899	,	1400	,	1390	}	,
    {	0.016181	,	0.01604	,	1410	,	1400	}	,
    {	0.016323	,	0.016181	,	1420	,	1410	}	,
    {	0.016464	,	0.016323	,	1430	,	1420	}	,
    {	0.016605	,	0.016464	,	1440	,	1430	}	,
    {	0.016746	,	0.016605	,	1450	,	1440	}	,
    {	0.016887	,	0.016746	,	1460	,	1450	}	,
    {	0.017028	,	0.016887	,	1470	,	1460	}	,
    {	0.017169	,	0.017028	,	1480	,	1470	}	,
    {	0.01731	,	0.017169	,	1490	,	1480	}	,
    {	0.017451	,	0.01731	,	1500	,	1490	}	,
    {	0.017591	,	0.017451	,	1510	,	1500	}	,
    {	0.017732	,	0.017591	,	1520	,	1510	}	,
    {	0.017872	,	0.017732	,	1530	,	1520	}	,
    {	0.018012	,	0.017872	,	1540	,	1530	}	,
    {	0.018152	,	0.018012	,	1550	,	1540	}	,
    {	0.018292	,	0.018152	,	1560	,	1550	}	,
    {	0.018431	,	0.018292	,	1570	,	1560	}	,
    {	0.018571	,	0.018431	,	1580	,	1570	}	,
    {	0.01871	,	0.018571	,	1590	,	1580	}	,
    {	0.018849	,	0.01871	,	1600	,	1590	}	,
    {	0.018988	,	0.018849	,	1610	,	1600	}	,
    {	0.019126	,	0.018988	,	1620	,	1610	}	,
    {	0.019264	,	0.019126	,	1630	,	1620	}	,
    {	0.019402	,	0.019264	,	1640	,	1630	}	,
    {	0.01954	,	0.019402	,	1650	,	1640	}	,
    {	0.019677	,	0.01954	,	1660	,	1650	}	,
    {	0.019814	,	0.019677	,	1670	,	1660	}	,
    {	0.019951	,	0.019814	,	1680	,	1670	}	,
    {	0.020087	,	0.019951	,	1690	,	1680	}	,
    {	0.020222	,	0.020087	,	1700	,	1690	}	,
    {	0.020356	,	0.020222	,	1710	,	1700	}	,
    {	0.020488	,	0.020356	,	1720	,	1710	}	,
    {	0.02062	,	0.020488	,	1730	,	1720	}	,
    {	0.020749	,	0.02062	,	1740	,	1730	}	,
    {	0.020877	,	0.020749	,	1750	,	1740	}	,
    {	0.021003	,	0.020877	,	1760	,	1750	}	,
    {	0.021101	,	0.021003	,	1768	,	1760	}	,
 };

 BioThermoMap V2T_S[] = { // -50 ~ 1768 Deg.C
    {	-0.000194,	-0.000236,	-40	,	-50	}	,
    {	-0.00015	,	-0.000194,	-30	,	-40	}	,
    {	-0.000103,	-0.00015	,	-20	,	-30	}	,
    {	-0.000053,	-0.000103,	-10	,	-20	}	,
    {	     0	,	-0.000053,	 0 	,	-10	}	,
    {	0.000055	,	     0	,	10 	,	0  	}	,
    {	0.000113	,	0.000055	,	20 	,	10 	}	,
    {	0.000173	,	0.000113	,	30 	,	20 	}	,
    {	0.000235	,	0.000173	,	40 	,	30 	}	,
    {	0.000299	,	0.000235	,	50 	,	40 	}	,
    {	0.000365	,	0.000299	,	60 	,	50 	}	,
    {	0.000433	,	0.000365	,	70 	,	60 	}	,
    {	0.000502	,	0.000433	,	80 	,	70 	}	,
    {	0.000573	,	0.000502	,	90 	,	80 	}	,
    {	0.000646	,	0.000573	,	100	,	90 	}	,
    {	0.00072	,	0.000646	,	110	,	100	}	,
    {	0.000795	,	0.00072	,	120	,	110	}	,
    {	0.000872	,	0.000795	,	130	,	120	}	,
    {	0.00095	,	0.000872	,	140	,	130	}	,
    {	0.001029	,	0.00095	,	150	,	140	}	,
    {	0.00111	,	0.001029	,	160	,	150	}	,
    {	0.001191	,	0.00111	,	170	,	160	}	,
    {	0.001273	,	0.001191	,	180	,	170	}	,
    {	0.001357	,	0.001273	,	190	,	180	}	,
    {	0.001441	,	0.001357	,	200	,	190	}	,
    {	0.001526	,	0.001441	,	210	,	200	}	,
    {	0.001612	,	0.001526	,	220	,	210	}	,
    {	0.001698	,	0.001612	,	230	,	220	}	,
    {	0.001786	,	0.001698	,	240	,	230	}	,
    {	0.001874	,	0.001786	,	250	,	240	}	,
    {	0.001962	,	0.001874	,	260	,	250	}	,
    {	0.002052	,	0.001962	,	270	,	260	}	,
    {	0.002141	,	0.002052	,	280	,	270	}	,
    {	0.002232	,	0.002141	,	290	,	280	}	,
    {	0.002323	,	0.002232	,	300	,	290	}	,
    {	0.002415	,	0.002323	,	310	,	300	}	,
    {	0.002507	,	0.002415	,	320	,	310	}	,
    {	0.002599	,	0.002507	,	330	,	320	}	,
    {	0.002692	,	0.002599	,	340	,	330	}	,
    {	0.002786	,	0.002692	,	350	,	340	}	,
    {	0.00288	,	0.002786	,	360	,	350	}	,
    {	0.002974	,	0.00288	,	370	,	360	}	,
    {	0.003069	,	0.002974	,	380	,	370	}	,
    {	0.003164	,	0.003069	,	390	,	380	}	,
    {	0.003259	,	0.003164	,	400	,	390	}	,
    {	0.003355	,	0.003259	,	410	,	400	}	,
    {	0.003451	,	0.003355	,	420	,	410	}	,
    {	0.003548	,	0.003451	,	430	,	420	}	,
    {	0.003645	,	0.003548	,	440	,	430	}	,
    {	0.003742	,	0.003645	,	450	,	440	}	,
    {	0.00384	,	0.003742	,	460	,	450	}	,
    {	0.003938	,	0.00384	,	470	,	460	}	,
    {	0.004036	,	0.003938	,	480	,	470	}	,
    {	0.004134	,	0.004036	,	490	,	480	}	,
    {	0.004233	,	0.004134	,	500	,	490	}	,
    {	0.004332	,	0.004233	,	510	,	500	}	,
    {	0.004432	,	0.004332	,	520	,	510	}	,
    {	0.004532	,	0.004432	,	530	,	520	}	,
    {	0.004632	,	0.004532	,	540	,	530	}	,
    {	0.004732	,	0.004632	,	550	,	540	}	,
    {	0.004833	,	0.004732	,	560	,	550	}	,
    {	0.004934	,	0.004833	,	570	,	560	}	,
    {	0.005035	,	0.004934	,	580	,	570	}	,
    {	0.005137	,	0.005035	,	590	,	580	}	,
    {	0.005239	,	0.005137	,	600	,	590	}	,
    {	0.005341	,	0.005239	,	610	,	600	}	,
    {	0.005443	,	0.005341	,	620	,	610	}	,
    {	0.005546	,	0.005443	,	630	,	620	}	,
    {	0.005649	,	0.005546	,	640	,	630	}	,
    {	0.005753	,	0.005649	,	650	,	640	}	,
    {	0.005857	,	0.005753	,	660	,	650	}	,
    {	0.005961	,	0.005857	,	670	,	660	}	,
    {	0.006065	,	0.005961	,	680	,	670	}	,
    {	0.00617	,	0.006065	,	690	,	680	}	,
    {	0.006275	,	0.00617	,	700	,	690	}	,
    {	0.006381	,	0.006275	,	710	,	700	}	,
    {	0.006486	,	0.006381	,	720	,	710	}	,
    {	0.006593	,	0.006486	,	730	,	720	}	,
    {	0.006699	,	0.006593	,	740	,	730	}	,
    {	0.006806	,	0.006699	,	750	,	740	}	,
    {	0.006913	,	0.006806	,	760	,	750	}	,
    {	0.00702	,	0.006913	,	770	,	760	}	,
    {	0.007128	,	0.00702	,	780	,	770	}	,
    {	0.007236	,	0.007128	,	790	,	780	}	,
    {	0.007345	,	0.007236	,	800	,	790	}	,
    {	0.007454	,	0.007345	,	810	,	800	}	,
    {	0.007563	,	0.007454	,	820	,	810	}	,
    {	0.007673	,	0.007563	,	830	,	820	}	,
    {	0.007783	,	0.007673	,	840	,	830	}	,
    {	0.007893	,	0.007783	,	850	,	840	}	,
    {	0.008003	,	0.007893	,	860	,	850	}	,
    {	0.008114	,	0.008003	,	870	,	860	}	,
    {	0.008226	,	0.008114	,	880	,	870	}	,
    {	0.008337	,	0.008226	,	890	,	880	}	,
    {	0.008449	,	0.008337	,	900	,	890	}	,
    {	0.008562	,	0.008449	,	910	,	900	}	,
    {	0.008674	,	0.008562	,	920	,	910	}	,
    {	0.008787	,	0.008674	,	930	,	920	}	,
    {	0.0089	,	0.008787	,	940	,	930	}	,
    {	0.009014	,	0.0089	,	950	,	940	}	,
    {	0.009128	,	0.009014	,	960	,	950	}	,
    {	0.009242	,	0.009128	,	970	,	960	}	,
    {	0.009357	,	0.009242	,	980	,	970	}	,
    {	0.009472	,	0.009357	,	990	,	980	}	,
    {	0.009587	,	0.009472	,	1000	,	990	}	,
    {	0.009703	,	0.009587	,	1010	,	1000	}	,
    {	0.009819	,	0.009703	,	1020	,	1010	}	,
    {	0.009935	,	0.009819	,	1030	,	1020	}	,
    {	0.010051	,	0.009935	,	1040	,	1030	}	,
    {	0.010168	,	0.010051	,	1050	,	1040	}	,
    {	0.010285	,	0.010168	,	1060	,	1050	}	,
    {	0.010403	,	0.010285	,	1070	,	1060	}	,
    {	0.01052	,	0.010403	,	1080	,	1070	}	,
    {	0.010638	,	0.01052	,	1090	,	1080	}	,
    {	0.010757	,	0.010638	,	1100	,	1090	}	,
    {	0.010875	,	0.010757	,	1110	,	1100	}	,
    {	0.010994	,	0.010875	,	1120	,	1110	}	,
    {	0.011113	,	0.010994	,	1130	,	1120	}	,
    {	0.011232	,	0.011113	,	1140	,	1130	}	,
    {	0.011351	,	0.011232	,	1150	,	1140	}	,
    {	0.011471	,	0.011351	,	1160	,	1150	}	,
    {	0.01159	,	0.011471	,	1170	,	1160	}	,
    {	0.01171	,	0.01159	,	1180	,	1170	}	,
    {	0.01183	,	0.01171	,	1190	,	1180	}	,
    {	0.011951	,	0.01183	,	1200	,	1190	}	,
    {	0.012071	,	0.011951	,	1210	,	1200	}	,
    {	0.012191	,	0.012071	,	1220	,	1210	}	,
    {	0.012312	,	0.012191	,	1230	,	1220	}	,
    {	0.012433	,	0.012312	,	1240	,	1230	}	,
    {	0.012554	,	0.012433	,	1250	,	1240	}	,
    {	0.012675	,	0.012554	,	1260	,	1250	}	,
    {	0.012796	,	0.012675	,	1270	,	1260	}	,
    {	0.012917	,	0.012796	,	1280	,	1270	}	,
    {	0.013038	,	0.012917	,	1290	,	1280	}	,
    {	0.013159	,	0.013038	,	1300	,	1290	}	,
    {	0.01328	,	0.013159	,	1310	,	1300	}	,
    {	0.013402	,	0.01328	,	1320	,	1310	}	,
    {	0.013523	,	0.013402	,	1330	,	1320	}	,
    {	0.013644	,	0.013523	,	1340	,	1330	}	,
    {	0.013766	,	0.013644	,	1350	,	1340	}	,
    {	0.013887	,	0.013766	,	1360	,	1350	}	,
    {	0.014009	,	0.013887	,	1370	,	1360	}	,
    {	0.01413	,	0.014009	,	1380	,	1370	}	,
    {	0.014251	,	0.01413	,	1390	,	1380	}	,
    {	0.014373	,	0.014251	,	1400	,	1390	}	,
    {	0.014494	,	0.014373	,	1410	,	1400	}	,
    {	0.014615	,	0.014494	,	1420	,	1410	}	,
    {	0.014736	,	0.014615	,	1430	,	1420	}	,
    {	0.014857	,	0.014736	,	1440	,	1430	}	,
    {	0.014978	,	0.014857	,	1450	,	1440	}	,
    {	0.015099	,	0.014978	,	1460	,	1450	}	,
    {	0.01522	,	0.015099	,	1470	,	1460	}	,
    {	0.015341	,	0.01522	,	1480	,	1470	}	,
    {	0.015461	,	0.015341	,	1490	,	1480	}	,
    {	0.015582	,	0.015461	,	1500	,	1490	}	,
    {	0.015702	,	0.015582	,	1510	,	1500	}	,
    {	0.015822	,	0.015702	,	1520	,	1510	}	,
    {	0.015942	,	0.015822	,	1530	,	1520	}	,
    {	0.016062	,	0.015942	,	1540	,	1530	}	,
    {	0.016182	,	0.016062	,	1550	,	1540	}	,
    {	0.016301	,	0.016182	,	1560	,	1550	}	,
    {	0.01642	,	0.016301	,	1570	,	1560	}	,
    {	0.016539	,	0.01642	,	1580	,	1570	}	,
    {	0.016658	,	0.016539	,	1590	,	1580	}	,
    {	0.016777	,	0.016658	,	1600	,	1590	}	,
    {	0.016895	,	0.016777	,	1610	,	1600	}	,
    {	0.017013	,	0.016895	,	1620	,	1610	}	,
    {	0.017131	,	0.017013	,	1630	,	1620	}	,
    {	0.017249	,	0.017131	,	1640	,	1630	}	,
    {	0.017366	,	0.017249	,	1650	,	1640	}	,
    {	0.017483	,	0.017366	,	1660	,	1650	}	,
    {	0.0176	,	0.017483	,	1670	,	1660	}	,
    {	0.017717	,	0.0176	,	1680	,	1670	}	,
    {	0.017832	,	0.017717	,	1690	,	1680	}	,
    {	0.017947	,	0.017832	,	1700	,	1690	}	,
    {	0.018061	,	0.017947	,	1710	,	1700	}	,
    {	0.018174	,	0.018061	,	1720	,	1710	}	,
    {	0.018285	,	0.018174	,	1730	,	1720	}	,
    {	0.018395	,	0.018285	,	1740	,	1730	}	,
    {	0.018503	,	0.018395	,	1750	,	1740	}	,
    {	0.018609	,	0.018503	,	1760	,	1750	}	,
    {	0.018693	,	0.018609	,	1768	,	1760	}	,
 };

 BioThermoMap V2T_T[] = { // -270 ~ 400 Deg.C
    {	-0.006232,	-0.006258,	-260	,	-270	}	,
    {	-0.00618	,	-0.006232,	-250	,	-260	}	,
    {	-0.006105,	-0.00618	,	-240	,	-250	}	,
    {	-0.006007,	-0.006105,	-230	,	-240	}	,
    {	-0.005888,	-0.006007,	-220	,	-230	}	,
    {	-0.005753,	-0.005888,	-210	,	-220	}	,
    {	-0.005603,	-0.005753,	-200	,	-210	}	,
    {	-0.005439,	-0.005603,	-190	,	-200	}	,
    {	-0.005261,	-0.005439,	-180	,	-190	}	,
    {	-0.00507	,	-0.005261,	-170	,	-180	}	,
    {	-0.004865,	-0.00507	,	-160	,	-170	}	,
    {	-0.004648,	-0.004865,	-150	,	-160	}	,
    {	-0.004419,	-0.004648,	-140	,	-150	}	,
    {	-0.004177,	-0.004419,	-130	,	-140	}	,
    {	-0.003923,	-0.004177,	-120	,	-130	}	,
    {	-0.003657,	-0.003923,	-110	,	-120	}	,
    {	-0.003379,	-0.003657,	-100	,	-110	}	,
    {	-0.003089,	-0.003379,	-90	,	-100	}	,
    {	-0.002788,	-0.003089,	-80	,	-90	}	,
    {	-0.002476,	-0.002788,	-70	,	-80	}	,
    {	-0.002153,	-0.002476,	-60	,	-70	}	,
    {	-0.001819,	-0.002153,	-50	,	-60	}	,
    {	-0.001475,	-0.001819,	-40	,	-50	}	,
    {	-0.001121,	-0.001475,	-30	,	-40	}	,
    {	-0.000757,	-0.001121,	-20	,	-30	}	,
    {	-0.000383,	-0.000757,	-10	,	-20	}	,
    {	     0	,	-0.000383,	0  	,	-10	}	,
    {	0.000391	,	     0	,	10 	,	0  	}	,
    {	0.00079	,	0.000391	,	20 	,	10 	}	,
    {	0.001196	,	0.00079	,	30 	,	20 	}	,
    {	0.001612	,	0.001196	,	40 	,	30 	}	,
    {	0.002036	,	0.001612	,	50 	,	40 	}	,
    {	0.002468	,	0.002036	,	60 	,	50 	}	,
    {	0.002909	,	0.002468	,	70 	,	60 	}	,
    {	0.003358	,	0.002909	,	80 	,	70 	}	,
    {	0.003814	,	0.003358	,	90 	,	80 	}	,
    {	0.004279	,	0.003814	,	100	,	90 	}	,
    {	0.00475	,	0.004279	,	110	,	100	}	,
    {	0.005228	,	0.00475	,	120	,	110	}	,
    {	0.005714	,	0.005228	,	130	,	120	}	,
    {	0.006206	,	0.005714	,	140	,	130	}	,
    {	0.006704	,	0.006206	,	150	,	140	}	,
    {	0.007209	,	0.006704	,	160	,	150	}	,
    {	0.00772	,	0.007209	,	170	,	160	}	,
    {	0.008237	,	0.00772	,	180	,	170	}	,
    {	0.008759	,	0.008237	,	190	,	180	}	,
    {	0.009288	,	0.008759	,	200	,	190	}	,
    {	0.009822	,	0.009288	,	210	,	200	}	,
    {	0.010362	,	0.009822	,	220	,	210	}	,
    {	0.010907	,	0.010362	,	230	,	220	}	,
    {	0.011458	,	0.010907	,	240	,	230	}	,
    {	0.012013	,	0.011458	,	250	,	240	}	,
    {	0.012574	,	0.012013	,	260	,	250	}	,
    {	0.013139	,	0.012574	,	270	,	260	}	,
    {	0.013709	,	0.013139	,	280	,	270	}	,
    {	0.014283	,	0.013709	,	290	,	280	}	,
    {	0.014862	,	0.014283	,	300	,	290	}	,
    {	0.015445	,	0.014862	,	310	,	300	}	,
    {	0.016032	,	0.015445	,	320	,	310	}	,
    {	0.016624	,	0.016032	,	330	,	320	}	,
    {	0.017219	,	0.016624	,	340	,	330	}	,
    {	0.017819	,	0.017219	,	350	,	340	}	,
    {	0.018422	,	0.017819	,	360	,	350	}	,
    {	0.01903	,	0.018422	,	370	,	360	}	,
    {	0.019641	,	0.01903	,	380	,	370	}	,
    {	0.020255	,	0.019641	,	390	,	380	}	,
    {	0.020872	,	0.020255	,	400	,	390	}	,
 };

double GetCjcVoltage( double cjcTemperature, uint32 thermoType )
{
   double cjcVolt = 0;
   BioThermoMap * mapPtr;
   uint32 mapSize;

   switch ( thermoType )   
   {
   case TCType_B:
      {
         mapPtr = V2T_B;
         mapSize = ARRAY_SIZE(V2T_B);
      }
      break;
   case TCType_E:
      {
         mapPtr = V2T_E;
         mapSize = ARRAY_SIZE(V2T_E);
      }
      break;
   case TCType_J:
      {
         mapPtr = V2T_J;
         mapSize = ARRAY_SIZE(V2T_J);
      }
      break;
   case TCType_K:
      {
         mapPtr = V2T_K;
         mapSize = ARRAY_SIZE(V2T_K);
      }
      break;
   case TCType_R:
      {
         mapPtr = V2T_R;
         mapSize = ARRAY_SIZE(V2T_R);
      }
      break;
   case TCType_S:
      {
         mapPtr = V2T_S;
         mapSize = ARRAY_SIZE(V2T_S);
      }
      break;
   case TCType_T:
      {
         mapPtr = V2T_T;
         mapSize = ARRAY_SIZE(V2T_T);
      }
      break;
   default:
      return 0;
   }

   // Get the liner map position
   uint32 i;
   for ( i = 0; i < mapSize; ++i )
   {
      if ( cjcTemperature < mapPtr[i].thermoHi )
      {
         break;
      }
   }
   // If out of range, use the last liner section for calculate 
   if ( i >= mapSize )
   {
      i = mapSize - 1;
   }
   
   // calculate the voltage
   BioMapFuncPiece T2Vmap;
   T2Vmap.size = sizeof(BioMapFuncPiece); 
   T2Vmap.degree = 1;
   T2Vmap.upperLimit = mapPtr[i].thermoHi;
   T2Vmap.coef[1] = (mapPtr[i].mapHi - mapPtr[i].mapLo) / (mapPtr[i].thermoHi - mapPtr[i].thermoLo);
   T2Vmap.coef[0] = mapPtr[i].mapHi - T2Vmap.coef[1] * T2Vmap.upperLimit;
   cjcVolt = ScaleDataUsePolynomial( &T2Vmap, 1, cjcTemperature );

   return cjcVolt;
}

double GetThermoTemperature( double thermoVolt, uint32 thermoType )
{
   double temperature = 0;

   BioThermoMap * mapPtr;
   uint32 mapSize;

   switch ( thermoType )   
   {
   case TCType_B:
      {
         mapPtr = V2T_B;
         mapSize = ARRAY_SIZE(V2T_B);
      }
      break;
   case TCType_E:
      {
         mapPtr = V2T_E;
         mapSize = ARRAY_SIZE(V2T_E);
      }
      break;
   case TCType_J:
      {
         mapPtr = V2T_J;
         mapSize = ARRAY_SIZE(V2T_J);
      }
      break;
   case TCType_K:
      {
         mapPtr = V2T_K;
         mapSize = ARRAY_SIZE(V2T_K);
      }
      break;
   case TCType_R:
      {
         mapPtr = V2T_R;
         mapSize = ARRAY_SIZE(V2T_R);
      }
      break;
   case TCType_S:
      {
         mapPtr = V2T_S;
         mapSize = ARRAY_SIZE(V2T_S);
      }
      break;
   case TCType_T:
      {
         mapPtr = V2T_T;
         mapSize = ARRAY_SIZE(V2T_T);
      }
      break;
   default:
      return 0;
   }

   // Get the liner map position
   uint32 i;
   for ( i = 0; i < mapSize; ++i )
   {
      if ( thermoVolt < mapPtr[i].mapHi )
      {
         break;
      }
   }
   // If out of range, use the last liner section for calculate 
   if ( i >= mapSize )
   {
      i = mapSize - 1;
   }

   // calculate the voltage
   BioMapFuncPiece V2Tmap;
   V2Tmap.size = sizeof(BioMapFuncPiece); 
   V2Tmap.degree = 1;
   V2Tmap.upperLimit = mapPtr[i].mapHi;
   V2Tmap.coef[1] = (mapPtr[i].thermoHi - mapPtr[i].thermoLo) / (mapPtr[i].mapHi - mapPtr[i].mapLo);
   V2Tmap.coef[0] = mapPtr[i].thermoHi - V2Tmap.coef[1] * V2Tmap.upperLimit;
   temperature = ScaleDataUsePolynomial( &V2Tmap, 1, thermoVolt );

   return temperature;
}
